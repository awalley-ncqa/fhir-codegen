// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// A simple summary of a planned activity suitable for a general care plan system (e.g. form driven) that doesn't know about specific resources such as procedure etc.
  /// </summary>
  struct CarePlanActivityDetail {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// A description of the kind of resource the in-line definition of a care plan activity is representing.  The CarePlan.activity.detail is an in-line definition when a resource is not referenced using CarePlan.activity.reference.  For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest.
    /// </summary>
    NullableString8* _kind;
    /// <summary>
    /// The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.
    /// </summary>
    size_t _instantiatesCanonical_count;
    NullableString8** _instantiatesCanonical;
    /// <summary>
    /// This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.
    /// </summary>
    size_t _instantiatesUri_count;
    NullableString8** _instantiatesUri;
    /// <summary>
    /// Tends to be less relevant for activities involving particular products.  Codes should not convey negation - use "prohibited" instead.
    /// </summary>
    CodeableConcept* _code;
    /// <summary>
    /// This could be a diagnosis code.  If a full condition record exists or additional detail is needed, use reasonCondition instead.
    /// </summary>
    size_t _reasonCode_count;
    CodeableConcept** _reasonCode;
    /// <summary>
    /// Conditions can be identified at the activity level that are not identified as reasons for the overall plan.
    /// </summary>
    size_t _reasonReference_count;
    Reference** _reasonReference;
    /// <summary>
    /// Internal reference that identifies the goals that this activity is intended to contribute towards meeting.
    /// </summary>
    size_t _goal_count;
    Reference** _goal;
    /// <summary>
    /// Some aspects of status can be inferred based on the resources linked in actionTaken.  Note that "status" is only as current as the plan was most recently updated.  
    /// The unknown code is not to be used to convey other statuses.  The unknown code should be used when one of the statuses applies, but the authoring system doesn't know the current state of the activity.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// Will generally not be present if status is "complete".  Be sure to prompt to update this (or at least remove the existing value) if the status is changed.
    /// </summary>
    CodeableConcept* _statusReason;
    /// <summary>
    /// This element is labeled as a modifier because it marks an activity as an activity that is not to be performed.
    /// </summary>
    NullableBoolean* _doNotPerform;
    /// <summary>
    /// The period, timing or frequency upon which the described activity is to occur.
    /// </summary>
    Timing* _scheduledTiming;
    /// <summary>
    /// The period, timing or frequency upon which the described activity is to occur.
    /// </summary>
    Period* _scheduledPeriod;
    /// <summary>
    /// The period, timing or frequency upon which the described activity is to occur.
    /// </summary>
    string* _scheduledString;
    /// <summary>
    /// May reference a specific clinical location or may identify a type of location.
    /// </summary>
    Reference* _location;
    /// <summary>
    /// A performer MAY also be a participant in the care plan.
    /// </summary>
    size_t _performer_count;
    Reference** _performer;
    /// <summary>
    /// Identifies the food, drug or other product to be consumed or supplied in the activity.
    /// </summary>
    CodeableConcept* _productCodeableConcept;
    /// <summary>
    /// Identifies the food, drug or other product to be consumed or supplied in the activity.
    /// </summary>
    Reference* _productReference;
    /// <summary>
    /// Identifies the quantity expected to be consumed in a given day.
    /// </summary>
    Quantity* _dailyAmount;
    /// <summary>
    /// Identifies the quantity expected to be supplied, administered or consumed by the subject.
    /// </summary>
    Quantity* _quantity;
    /// <summary>
    /// This provides a textual description of constraints on the intended activity occurrence, including relation to other activities.  It may also include objectives, pre-conditions and end-conditions.  Finally, it may convey specifics about the activity such as body site, method, route, etc.
    /// </summary>
    string* _description;
  };
  /// <summary>
  /// Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc.
  /// </summary>
  struct CarePlanActivity {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Note that this should not duplicate the activity status (e.g. completed or in progress).
    /// </summary>
    size_t _outcomeCodeableConcept_count;
    CodeableConcept** _outcomeCodeableConcept;
    /// <summary>
    /// The activity outcome is independent of the outcome of the related goal(s).  For example, if the goal is to achieve a target body weight of 150 lbs and an activity is defined to diet, then the activity outcome could be calories consumed whereas the goal outcome is an observation for the actual body weight measured.
    /// </summary>
    size_t _outcomeReference_count;
    Reference** _outcomeReference;
    /// <summary>
    /// This element should NOT be used to describe the activity to be performed - that occurs either within the resource pointed to by activity.detail.reference or in activity.detail.description.
    /// </summary>
    size_t _progress_count;
    Annotation** _progress;
    /// <summary>
    /// Standard extension exists ([resource-pertainsToGoal](extension-resource-pertainstogoal.html)) that allows goals to be referenced from any of the referenced resources in CarePlan.activity.reference.  
    /// The goal should be visible when the resource referenced by CarePlan.activity.reference is viewed independently from the CarePlan.  Requests that are pointed to by a CarePlan using this element should *not* point to this CarePlan using the "basedOn" element.  i.e. Requests that are part of a CarePlan are not "based on" the CarePlan.
    /// </summary>
    Reference* _reference;
    /// <summary>
    /// A simple summary of a planned activity suitable for a general care plan system (e.g. form driven) that doesn't know about specific resources such as procedure etc.
    /// </summary>
    CarePlanActivityDetail* _detail;
  };
  /// <summary>
  /// Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.
  /// </summary>
  struct CarePlan {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan.
    /// </summary>
    size_t _instantiatesCanonical_count;
    NullableString8** _instantiatesCanonical;
    /// <summary>
    /// This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.
    /// </summary>
    size_t _instantiatesUri_count;
    NullableString8** _instantiatesUri;
    /// <summary>
    /// A care plan that is fulfilled in whole or in part by this care plan.
    /// </summary>
    size_t _basedOn_count;
    Reference** _basedOn;
    /// <summary>
    /// The replacement could be because the initial care plan was immediately rejected (due to an issue) or because the previous care plan was completed, but the need for the action described by the care plan remains ongoing.
    /// </summary>
    size_t _replaces_count;
    Reference** _replaces;
    /// <summary>
    /// Each care plan is an independent request, such that having a care plan be part of another care plan can cause issues with cascading statuses.  As such, this element is still being discussed.
    /// </summary>
    size_t _partOf_count;
    Reference** _partOf;
    /// <summary>
    /// The unknown code is not to be used to convey other statuses.  The unknown code should be used when one of the statuses applies, but the authoring system doesn't know the current state of the care plan.
    /// This element is labeled as a modifier because the status contains the code entered-in-error that marks the plan as not currently valid.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// This element is labeled as a modifier because the intent alters when and how the resource is actually applicable.
    /// </summary>
    NullableString8* _intent;
    /// <summary>
    /// There may be multiple axes of categorization and one plan may serve multiple purposes.  In some cases, this may be redundant with references to CarePlan.concern.
    /// </summary>
    size_t _category_count;
    CodeableConcept** _category;
    /// <summary>
    /// Human-friendly name for the care plan.
    /// </summary>
    string* _title;
    /// <summary>
    /// A description of the scope and nature of the plan.
    /// </summary>
    string* _description;
    /// <summary>
    /// Identifies the patient or group whose intended care is described by the plan.
    /// </summary>
    Reference* _subject;
    /// <summary>
    /// This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter. CarePlan activities conducted as a result of the care plan may well occur as part of other encounters.
    /// </summary>
    Reference* _encounter;
    /// <summary>
    /// Any activities scheduled as part of the plan should be constrained to the specified period regardless of whether the activities are planned within a single encounter/episode or across multiple encounters/episodes (e.g. the longitudinal management of a chronic condition).
    /// </summary>
    Period* _period;
    /// <summary>
    /// Represents when this particular CarePlan record was created in the system, which is often a system-generated date.
    /// </summary>
    ISO8601_Time* _created;
    /// <summary>
    /// The author may also be a contributor.  For example, an organization can be an author, but not listed as a contributor.
    /// </summary>
    Reference* _author;
    /// <summary>
    /// Collaborative care plans may have multiple contributors.
    /// </summary>
    size_t _contributor_count;
    Reference** _contributor;
    /// <summary>
    /// Identifies all people and organizations who are expected to be involved in the care envisioned by this plan.
    /// </summary>
    size_t _careTeam_count;
    Reference** _careTeam;
    /// <summary>
    /// When the diagnosis is related to an allergy or intolerance, the Condition and AllergyIntolerance resources can both be used. However, to be actionable for decision support, using Condition alone is not sufficient as the allergy or intolerance condition needs to be represented as an AllergyIntolerance.
    /// </summary>
    size_t _addresses_count;
    Reference** _addresses;
    /// <summary>
    /// Use "concern" to identify specific conditions addressed by the care plan.
    /// </summary>
    size_t _supportingInfo_count;
    Reference** _supportingInfo;
    /// <summary>
    /// Goal can be achieving a particular change or merely maintaining a current state or even slowing a decline.
    /// </summary>
    size_t _goal_count;
    Reference** _goal;
    /// <summary>
    /// Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc.
    /// </summary>
    size_t _activity_count;
    CarePlanActivity** _activity;
    /// <summary>
    /// General notes about the care plan not covered elsewhere.
    /// </summary>
    size_t _note_count;
    Annotation** _note;
  };
};
