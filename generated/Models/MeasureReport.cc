// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// The populations that make up the population group, one for each type of population appropriate for the measure.
  /// </summary>
  struct MeasureReportGroupPopulation {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The type of the population.
    /// </summary>
    CodeableConcept* _code;
    /// <summary>
    /// The number of members of the population.
    /// </summary>
    NullableInt32* _count;
    /// <summary>
    /// This element refers to a List of subject level MeasureReport resources, one for each subject in this population.
    /// </summary>
    Reference* _subjectResults;
  };
  /// <summary>
  /// A stratifier component value.
  /// </summary>
  struct MeasureReportGroupStratifierStratumComponent {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The code for the stratum component value.
    /// </summary>
    CodeableConcept* _code;
    /// <summary>
    /// The stratum component value.
    /// </summary>
    CodeableConcept* _value;
  };
  /// <summary>
  /// The populations that make up the stratum, one for each type of population appropriate to the measure.
  /// </summary>
  struct MeasureReportGroupStratifierStratumPopulation {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The type of the population.
    /// </summary>
    CodeableConcept* _code;
    /// <summary>
    /// The number of members of the population in this stratum.
    /// </summary>
    NullableInt32* _count;
    /// <summary>
    /// This element refers to a List of subject level MeasureReport resources, one for each subject in this population in this stratum.
    /// </summary>
    Reference* _subjectResults;
  };
  /// <summary>
  /// This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value.
  /// </summary>
  struct MeasureReportGroupStratifierStratum {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.
    /// </summary>
    CodeableConcept* _value;
    /// <summary>
    /// A stratifier component value.
    /// </summary>
    size_t _component_count;
    MeasureReportGroupStratifierStratumComponent** _component;
    /// <summary>
    /// The populations that make up the stratum, one for each type of population appropriate to the measure.
    /// </summary>
    size_t _population_count;
    MeasureReportGroupStratifierStratumPopulation** _population;
    /// <summary>
    /// The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.
    /// </summary>
    Quantity* _measureScore;
  };
  /// <summary>
  /// When a measure includes multiple stratifiers, there will be a stratifier group for each stratifier defined by the measure.
  /// </summary>
  struct MeasureReportGroupStratifier {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The meaning of this stratifier, as defined in the measure definition.
    /// </summary>
    size_t _code_count;
    CodeableConcept** _code;
    /// <summary>
    /// This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value.
    /// </summary>
    size_t _stratum_count;
    MeasureReportGroupStratifierStratum** _stratum;
  };
  /// <summary>
  /// The results of the calculation, one for each population group in the measure.
  /// </summary>
  struct MeasureReportGroup {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The meaning of the population group as defined in the measure definition.
    /// </summary>
    CodeableConcept* _code;
    /// <summary>
    /// The populations that make up the population group, one for each type of population appropriate for the measure.
    /// </summary>
    size_t _population_count;
    MeasureReportGroupPopulation** _population;
    /// <summary>
    /// The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.
    /// </summary>
    Quantity* _measureScore;
    /// <summary>
    /// When a measure includes multiple stratifiers, there will be a stratifier group for each stratifier defined by the measure.
    /// </summary>
    size_t _stratifier_count;
    MeasureReportGroupStratifier** _stratifier;
  };
  /// <summary>
  /// The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
  /// </summary>
  struct MeasureReport {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Typically, this is used for identifiers that can go in an HL7 V3 II data type - e.g. to identify this {{title}} outside of FHIR, where the logical URL is not possible to use.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// Data-collection reports are used only to communicate data-of-interest for a measure. They do not necessarily include all the data for a particular subject or population, but they may.
    /// </summary>
    NullableString8* _type;
    /// <summary>
    /// A reference to the Measure that was calculated to produce this report.
    /// </summary>
    NullableString8* _measure;
    /// <summary>
    /// Optional subject identifying the individual or individuals the report is for.
    /// </summary>
    Reference* _subject;
    /// <summary>
    /// The date this measure report was generated.
    /// </summary>
    ISO8601_Time* _date;
    /// <summary>
    /// The individual, location, or organization that is reporting the data.
    /// </summary>
    Reference* _reporter;
    /// <summary>
    /// The reporting period for which the report was calculated.
    /// </summary>
    Period* _period;
    /// <summary>
    /// This element is typically defined by the measure, but reproduced here to ensure the measure score can be interpreted. The element is labeled as a modifier because it changes the interpretation of the reported measure score.
    /// </summary>
    CodeableConcept* _improvementNotation;
    /// <summary>
    /// The results of the calculation, one for each population group in the measure.
    /// </summary>
    size_t _group_count;
    MeasureReportGroup** _group;
    /// <summary>
    /// A reference to a Bundle containing the Resources that were used in the calculation of this measure.
    /// </summary>
    size_t _evaluatedResource_count;
    Reference** _evaluatedResource;
  };
};
