// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// It is not necessary for a structure map to identify any dependent structures, though not listing them may restrict its usefulness.
  /// </summary>
  struct StructureMapStructure {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The canonical reference to the structure.
    /// </summary>
    NullableString8* _url;
    /// <summary>
    /// How the referenced structure is used in this mapping.
    /// </summary>
    NullableString8* _mode;
    /// <summary>
    /// This is needed if both types have the same name (e.g. version conversion).
    /// </summary>
    string* _alias;
    /// <summary>
    /// Documentation that describes how the structure is used in the mapping.
    /// </summary>
    string* _documentation;
  };
  /// <summary>
  /// If no inputs are named, then the entry mappings are type based.
  /// </summary>
  struct StructureMapGroupInput {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Name for this instance of data.
    /// </summary>
    NullableString8* _name;
    /// <summary>
    /// Type for this instance of data.
    /// </summary>
    string* _type;
    /// <summary>
    /// Mode for this instance of data.
    /// </summary>
    NullableString8* _mode;
    /// <summary>
    /// Documentation for this instance of data.
    /// </summary>
    string* _documentation;
  };
  /// <summary>
  /// Source inputs to the mapping.
  /// </summary>
  struct StructureMapGroupRuleSource {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Type or variable this rule applies to.
    /// </summary>
    NullableString8* _context;
    /// <summary>
    /// Specified minimum cardinality for the element. This is optional; if present, it acts an implicit check on the input content.
    /// </summary>
    NullableInt32* _min;
    /// <summary>
    /// Specified maximum cardinality for the element - a number or a "*". This is optional; if present, it acts an implicit check on the input content (* just serves as documentation; it's the default value).
    /// </summary>
    string* _max;
    /// <summary>
    /// Specified type for the element. This works as a condition on the mapping - use for polymorphic elements.
    /// </summary>
    string* _type;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableString8* _defaultValueBase64Binary;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableBoolean* _defaultValueBoolean;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableString8* _defaultValueCanonical;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableString8* _defaultValueCode;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    ISO8601_Time* _defaultValueDate;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    ISO8601_Time* _defaultValueDateTime;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableString8* _defaultValueDecimal;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableString8* _defaultValueId;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    ISO8601_Time* _defaultValueInstant;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableInt32* _defaultValueInteger;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableString8* _defaultValueMarkdown;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableString8* _defaultValueOid;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableInt32* _defaultValuePositiveInt;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    string* _defaultValueString;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    ISO8601_Time* _defaultValueTime;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableInt32* _defaultValueUnsignedInt;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableString8* _defaultValueUri;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableString8* _defaultValueUrl;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    NullableString8* _defaultValueUuid;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Address* _defaultValueAddress;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Age* _defaultValueAge;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Annotation* _defaultValueAnnotation;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Attachment* _defaultValueAttachment;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    CodeableConcept* _defaultValueCodeableConcept;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Coding* _defaultValueCoding;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    ContactPoint* _defaultValueContactPoint;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Count* _defaultValueCount;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Distance* _defaultValueDistance;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Duration* _defaultValueDuration;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    HumanName* _defaultValueHumanName;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Identifier* _defaultValueIdentifier;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Money* _defaultValueMoney;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Period* _defaultValuePeriod;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Quantity* _defaultValueQuantity;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Range* _defaultValueRange;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Ratio* _defaultValueRatio;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Reference* _defaultValueReference;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    SampledData* _defaultValueSampledData;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Signature* _defaultValueSignature;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Timing* _defaultValueTiming;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    ContactDetail* _defaultValueContactDetail;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Contributor* _defaultValueContributor;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    DataRequirement* _defaultValueDataRequirement;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Expression* _defaultValueExpression;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    ParameterDefinition* _defaultValueParameterDefinition;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    RelatedArtifact* _defaultValueRelatedArtifact;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    TriggerDefinition* _defaultValueTriggerDefinition;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    UsageContext* _defaultValueUsageContext;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Dosage* _defaultValueDosage;
    /// <summary>
    /// If there's a default value on an item that can repeat, it will only be used once.
    /// </summary>
    Meta* _defaultValueMeta;
    /// <summary>
    /// Optional field for this source.
    /// </summary>
    string* _element;
    /// <summary>
    /// How to handle the list mode for this element.
    /// </summary>
    NullableString8* _listMode;
    /// <summary>
    /// Named context for field, if a field is specified.
    /// </summary>
    NullableString8* _variable;
    /// <summary>
    /// FHIRPath expression  - must be true or the rule does not apply.
    /// </summary>
    string* _condition;
    /// <summary>
    /// FHIRPath expression  - must be true or the mapping engine throws an error instead of completing.
    /// </summary>
    string* _check;
    /// <summary>
    /// This is typically used for recording that something Is not transformed to the target for some reason.
    /// </summary>
    string* _logMessage;
  };
  /// <summary>
  /// Parameters to the transform.
  /// </summary>
  struct StructureMapGroupRuleTargetParameter {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Parameter value - variable or literal.
    /// </summary>
    NullableString8* _valueId;
    /// <summary>
    /// Parameter value - variable or literal.
    /// </summary>
    string* _valueString;
    /// <summary>
    /// Parameter value - variable or literal.
    /// </summary>
    NullableBoolean* _valueBoolean;
    /// <summary>
    /// Parameter value - variable or literal.
    /// </summary>
    NullableInt32* _valueInteger;
    /// <summary>
    /// Parameter value - variable or literal.
    /// </summary>
    NullableString8* _valueDecimal;
  };
  /// <summary>
  /// Content to create because of this mapping rule.
  /// </summary>
  struct StructureMapGroupRuleTarget {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Type or variable this rule applies to.
    /// </summary>
    NullableString8* _context;
    /// <summary>
    /// How to interpret the context.
    /// </summary>
    NullableString8* _contextType;
    /// <summary>
    /// Field to create in the context.
    /// </summary>
    string* _element;
    /// <summary>
    /// Named context for field, if desired, and a field is specified.
    /// </summary>
    NullableString8* _variable;
    /// <summary>
    /// If field is a list, how to manage the list.
    /// </summary>
    size_t _listMode_count;
    NullableString8** _listMode;
    /// <summary>
    /// Internal rule reference for shared list items.
    /// </summary>
    NullableString8* _listRuleId;
    /// <summary>
    /// How the data is copied / created.
    /// </summary>
    NullableString8* _transform;
    /// <summary>
    /// Parameters to the transform.
    /// </summary>
    size_t _parameter_count;
    StructureMapGroupRuleTargetParameter** _parameter;
  };
  /// <summary>
  /// Which other rules to apply in the context of this rule.
  /// </summary>
  struct StructureMapGroupRuleDependent {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Name of a rule or group to apply.
    /// </summary>
    NullableString8* _name;
    /// <summary>
    /// Variable to pass to the rule or group.
    /// </summary>
    size_t _variable_count;
    string** _variable;
  };
  /// <summary>
  /// Transform Rule from source to target.
  /// </summary>
  struct StructureMapGroupRule {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Name of the rule for internal references.
    /// </summary>
    NullableString8* _name;
    /// <summary>
    /// Source inputs to the mapping.
    /// </summary>
    size_t _source_count;
    StructureMapGroupRuleSource** _source;
    /// <summary>
    /// Content to create because of this mapping rule.
    /// </summary>
    size_t _target_count;
    StructureMapGroupRuleTarget** _target;
    /// <summary>
    /// Rules contained in this rule.
    /// </summary>
    size_t _ruleField_count;
    StructureMapGroupRule** _ruleField;
    /// <summary>
    /// Which other rules to apply in the context of this rule.
    /// </summary>
    size_t _dependent_count;
    StructureMapGroupRuleDependent** _dependent;
    /// <summary>
    /// Documentation for this instance of data.
    /// </summary>
    string* _documentation;
  };
  /// <summary>
  /// Organizes the mapping into manageable chunks for human review/ease of maintenance.
  /// </summary>
  struct StructureMapGroup {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// A unique name for the group for the convenience of human readers.
    /// </summary>
    NullableString8* _name;
    /// <summary>
    /// Another group that this group adds rules to.
    /// </summary>
    NullableString8* _extends;
    /// <summary>
    /// Not applicable if the underlying model is untyped. There can only be one default mapping for any particular type combination.
    /// </summary>
    NullableString8* _typeMode;
    /// <summary>
    /// Additional supporting documentation that explains the purpose of the group and the types of mappings within it.
    /// </summary>
    string* _documentation;
    /// <summary>
    /// If no inputs are named, then the entry mappings are type based.
    /// </summary>
    size_t _input_count;
    StructureMapGroupInput** _input;
    /// <summary>
    /// Transform Rule from source to target.
    /// </summary>
    size_t _rule_count;
    StructureMapGroupRule** _rule;
  };
  /// <summary>
  /// A Map of relationships between 2 structures that can be used to transform data.
  /// </summary>
  struct StructureMap {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
    /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
    /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
    /// </summary>
    NullableString8* _url;
    /// <summary>
    /// Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this structure map outside of FHIR, where it is not possible to use the logical URI.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// There may be different structure map instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the structure map with the format [url]|[version].
    /// </summary>
    string* _version;
    /// <summary>
    /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
    /// </summary>
    string* _name;
    /// <summary>
    /// This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.
    /// </summary>
    string* _title;
    /// <summary>
    /// Allows filtering of structure maps that are appropriate for use versus not.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// Allows filtering of structure maps that are appropriate for use versus not.
    /// </summary>
    NullableBoolean* _experimental;
    /// <summary>
    /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the structure map. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
    /// </summary>
    ISO8601_Time* _date;
    /// <summary>
    /// Usually an organization but may be an individual. The publisher (or steward) of the structure map is the organization or individual primarily responsible for the maintenance and upkeep of the structure map. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the structure map. This item SHOULD be populated unless the information is available from context.
    /// </summary>
    string* _publisher;
    /// <summary>
    /// May be a web site, an email address, a telephone number, etc.
    /// </summary>
    size_t _contact_count;
    ContactDetail** _contact;
    /// <summary>
    /// This description can be used to capture details such as why the structure map was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the structure map as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the structure map is presumed to be the predominant language in the place the structure map was created).
    /// </summary>
    NullableString8* _description;
    /// <summary>
    /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
    /// </summary>
    size_t _useContext_count;
    UsageContext** _useContext;
    /// <summary>
    /// It may be possible for the structure map to be used in jurisdictions other than those for which it was originally designed or intended.
    /// </summary>
    size_t _jurisdiction_count;
    CodeableConcept** _jurisdiction;
    /// <summary>
    /// This element does not describe the usage of the structure map. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this structure map.
    /// </summary>
    NullableString8* _purpose;
    /// <summary>
    /// A copyright statement relating to the structure map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure map.
    /// </summary>
    NullableString8* _copyright;
    /// <summary>
    /// It is not necessary for a structure map to identify any dependent structures, though not listing them may restrict its usefulness.
    /// </summary>
    size_t _structure_count;
    StructureMapStructure** _structure;
    /// <summary>
    /// Other maps used by this map (canonical URLs).
    /// </summary>
    size_t _import_count;
    NullableString8** _import;
    /// <summary>
    /// Organizes the mapping into manageable chunks for human review/ease of maintenance.
    /// </summary>
    size_t _group_count;
    StructureMapGroup** _group;
  };
};
