// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// Actor participating in the resource.
  /// </summary>
  struct ExampleScenarioActor {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// should this be called ID or acronym?
    /// </summary>
    string* _actorId;
    /// <summary>
    /// The type of actor - person or system.
    /// </summary>
    NullableString8* _type;
    /// <summary>
    /// Cardinality: is name and description 1..1?
    /// </summary>
    string* _name;
    /// <summary>
    /// Cardinality: is name and description 1..1?
    /// </summary>
    NullableString8* _description;
  };
  /// <summary>
  /// A specific version of the resource.
  /// </summary>
  struct ExampleScenarioInstanceVersion {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The identifier of a specific version of a resource.
    /// </summary>
    string* _versionId;
    /// <summary>
    /// The description of the resource version.
    /// </summary>
    NullableString8* _description;
  };
  /// <summary>
  /// Resources contained in the instance (e.g. the observations contained in a bundle).
  /// </summary>
  struct ExampleScenarioInstanceContainedInstance {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Each resource contained in the instance.
    /// </summary>
    string* _resourceId;
    /// <summary>
    /// A specific version of a resource contained in the instance.
    /// </summary>
    string* _versionId;
  };
  /// <summary>
  /// Each resource and each version that is present in the workflow.
  /// </summary>
  struct ExampleScenarioInstance {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The id of the resource for referencing.
    /// </summary>
    string* _resourceId;
    /// <summary>
    /// The type of the resource.
    /// </summary>
    NullableString8* _resourceType;
    /// <summary>
    /// A short name for the resource instance.
    /// </summary>
    string* _name;
    /// <summary>
    /// Human-friendly description of the resource instance.
    /// </summary>
    NullableString8* _description;
    /// <summary>
    /// A specific version of the resource.
    /// </summary>
    size_t _version_count;
    ExampleScenarioInstanceVersion** _version;
    /// <summary>
    /// Resources contained in the instance (e.g. the observations contained in a bundle).
    /// </summary>
    size_t _containedInstance_count;
    ExampleScenarioInstanceContainedInstance** _containedInstance;
  };
  /// <summary>
  /// Each interaction or action.
  /// </summary>
  struct ExampleScenarioProcessStepOperation {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The sequential number of the interaction, e.g. 1.2.5.
    /// </summary>
    string* _number;
    /// <summary>
    /// The type of operation - CRUD.
    /// </summary>
    string* _type;
    /// <summary>
    /// The human-friendly name of the interaction.
    /// </summary>
    string* _name;
    /// <summary>
    /// Who starts the transaction.
    /// </summary>
    string* _initiator;
    /// <summary>
    /// Who receives the transaction.
    /// </summary>
    string* _receiver;
    /// <summary>
    /// A comment to be inserted in the diagram.
    /// </summary>
    NullableString8* _description;
    /// <summary>
    /// Whether the initiator is deactivated right after the transaction.
    /// </summary>
    NullableBoolean* _initiatorActive;
    /// <summary>
    /// Whether the receiver is deactivated right after the transaction.
    /// </summary>
    NullableBoolean* _receiverActive;
    /// <summary>
    /// Each resource instance used by the initiator.
    /// </summary>
    ExampleScenarioInstanceContainedInstance* _request;
    /// <summary>
    /// Each resource instance used by the responder.
    /// </summary>
    ExampleScenarioInstanceContainedInstance* _response;
  };
  /// <summary>
  /// Indicates an alternative step that can be taken instead of the operations on the base step in exceptional/atypical circumstances.
  /// </summary>
  struct ExampleScenarioProcessStepAlternative {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The label to display for the alternative that gives a sense of the circumstance in which the alternative should be invoked.
    /// </summary>
    string* _title;
    /// <summary>
    /// A human-readable description of the alternative explaining when the alternative should occur rather than the base step.
    /// </summary>
    NullableString8* _description;
    /// <summary>
    /// What happens in each alternative option.
    /// </summary>
    size_t _step_count;
    ExampleScenarioProcessStep** _step;
  };
  /// <summary>
  /// Each step of the process.
  /// </summary>
  struct ExampleScenarioProcessStep {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Nested process.
    /// </summary>
    size_t _process_count;
    ExampleScenarioProcess** _process;
    /// <summary>
    /// If there is a pause in the flow.
    /// </summary>
    NullableBoolean* _pause;
    /// <summary>
    /// Each interaction or action.
    /// </summary>
    ExampleScenarioProcessStepOperation* _operation;
    /// <summary>
    /// Indicates an alternative step that can be taken instead of the operations on the base step in exceptional/atypical circumstances.
    /// </summary>
    size_t _alternative_count;
    ExampleScenarioProcessStepAlternative** _alternative;
  };
  /// <summary>
  /// Each major process - a group of operations.
  /// </summary>
  struct ExampleScenarioProcess {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The diagram title of the group of operations.
    /// </summary>
    string* _title;
    /// <summary>
    /// A longer description of the group of operations.
    /// </summary>
    NullableString8* _description;
    /// <summary>
    /// Description of initial status before the process starts.
    /// </summary>
    NullableString8* _preConditions;
    /// <summary>
    /// Description of final status after the process ends.
    /// </summary>
    NullableString8* _postConditions;
    /// <summary>
    /// Each step of the process.
    /// </summary>
    size_t _step_count;
    ExampleScenarioProcessStep** _step;
  };
  /// <summary>
  /// Example of workflow instance.
  /// </summary>
  struct ExampleScenario {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.
    /// The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). 
    /// In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.
    /// </summary>
    NullableString8* _url;
    /// <summary>
    /// Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, and can then identify this example scenario outside of FHIR, where it is not possible to use the logical URI.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// There may be different example scenario instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the example scenario with the format [url]|[version].
    /// </summary>
    string* _version;
    /// <summary>
    /// The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.
    /// </summary>
    string* _name;
    /// <summary>
    /// Allows filtering of example scenarios that are appropriate for use versus not.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// Allows filtering of example scenarios that are appropriate for use versus not.
    /// </summary>
    NullableBoolean* _experimental;
    /// <summary>
    /// Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the example scenario. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.
    /// </summary>
    ISO8601_Time* _date;
    /// <summary>
    /// Usually an organization but may be an individual. The publisher (or steward) of the example scenario is the organization or individual primarily responsible for the maintenance and upkeep of the example scenario. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the example scenario. This item SHOULD be populated unless the information is available from context.
    /// </summary>
    string* _publisher;
    /// <summary>
    /// May be a web site, an email address, a telephone number, etc.
    /// </summary>
    size_t _contact_count;
    ContactDetail** _contact;
    /// <summary>
    /// When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.
    /// </summary>
    size_t _useContext_count;
    UsageContext** _useContext;
    /// <summary>
    /// It may be possible for the example scenario to be used in jurisdictions other than those for which it was originally designed or intended.
    /// </summary>
    size_t _jurisdiction_count;
    CodeableConcept** _jurisdiction;
    /// <summary>
    /// nullFrequently, the copyright differs between the value set and the codes that are included. The copyright statement should clearly differentiate between these when required.
    /// </summary>
    NullableString8* _copyright;
    /// <summary>
    /// This element does not describe the usage of the example scenario. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this example scenario.
    /// </summary>
    NullableString8* _purpose;
    /// <summary>
    /// Actor participating in the resource.
    /// </summary>
    size_t _actor_count;
    ExampleScenarioActor** _actor;
    /// <summary>
    /// Each resource and each version that is present in the workflow.
    /// </summary>
    size_t _instance_count;
    ExampleScenarioInstance** _instance;
    /// <summary>
    /// Each major process - a group of operations.
    /// </summary>
    size_t _process_count;
    ExampleScenarioProcess** _process;
    /// <summary>
    /// Another nested workflow.
    /// </summary>
    size_t _workflow_count;
    NullableString8** _workflow;
  };
};
