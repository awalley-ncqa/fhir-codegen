// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// The current status is always found in the current version of the resource, not the status history.
  /// </summary>
  struct EncounterStatusHistory {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// planned | arrived | triaged | in-progress | onleave | finished | cancelled +.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// The time that the episode was in the specified status.
    /// </summary>
    Period* _period;
  };
  /// <summary>
  /// The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transitions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kind of discharge from emergency to inpatient.
  /// </summary>
  struct EncounterClassHistory {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// inpatient | outpatient | ambulatory | emergency +.
    /// </summary>
    Coding* _class;
    /// <summary>
    /// The time that the episode was in the specified class.
    /// </summary>
    Period* _period;
  };
  /// <summary>
  /// The list of people responsible for providing the service.
  /// </summary>
  struct EncounterParticipant {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The participant type indicates how an individual participates in an encounter. It includes non-practitioner participants, and for practitioners this is to describe the action type in the context of this encounter (e.g. Admitting Dr, Attending Dr, Translator, Consulting Dr). This is different to the practitioner roles which are functional roles, derived from terms of employment, education, licensing, etc.
    /// </summary>
    size_t _type_count;
    CodeableConcept** _type;
    /// <summary>
    /// The period of time that the specified participant participated in the encounter. These can overlap or be sub-sets of the overall encounter's period.
    /// </summary>
    Period* _period;
    /// <summary>
    /// Persons involved in the encounter other than the patient.
    /// </summary>
    Reference* _individual;
  };
  /// <summary>
  /// The list of diagnosis relevant to this encounter.
  /// </summary>
  struct EncounterDiagnosis {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis).
    /// </summary>
    Reference* _condition;
    /// <summary>
    /// Role that this diagnosis has within the encounter (e.g. admission, billing, discharge â€¦).
    /// </summary>
    CodeableConcept* _use;
    /// <summary>
    /// Ranking of the diagnosis (for each role type).
    /// </summary>
    NullableInt32* _rank;
  };
  /// <summary>
  /// An Encounter may cover more than just the inpatient stay. Contexts such as outpatients, community clinics, and aged care facilities are also included.
  /// The duration recorded in the period of this encounter covers the entire scope of this hospitalization record.
  /// </summary>
  struct EncounterHospitalization {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Pre-admission identifier.
    /// </summary>
    Identifier* _preAdmissionIdentifier;
    /// <summary>
    /// The location/organization from which the patient came before admission.
    /// </summary>
    Reference* _origin;
    /// <summary>
    /// From where patient was admitted (physician referral, transfer).
    /// </summary>
    CodeableConcept* _admitSource;
    /// <summary>
    /// Whether this hospitalization is a readmission and why if known.
    /// </summary>
    CodeableConcept* _reAdmission;
    /// <summary>
    /// For example, a patient may request both a dairy-free and nut-free diet preference (not mutually exclusive).
    /// </summary>
    size_t _dietPreference_count;
    CodeableConcept** _dietPreference;
    /// <summary>
    /// Special courtesies (VIP, board member).
    /// </summary>
    size_t _specialCourtesy_count;
    CodeableConcept** _specialCourtesy;
    /// <summary>
    /// Any special requests that have been made for this hospitalization encounter, such as the provision of specific equipment or other things.
    /// </summary>
    size_t _specialArrangement_count;
    CodeableConcept** _specialArrangement;
    /// <summary>
    /// Location/organization to which the patient is discharged.
    /// </summary>
    Reference* _destination;
    /// <summary>
    /// Category or kind of location after discharge.
    /// </summary>
    CodeableConcept* _dischargeDisposition;
  };
  /// <summary>
  /// Virtual encounters can be recorded in the Encounter by specifying a location reference to a location of type "kind" such as "client's home" and an encounter.class = "virtual".
  /// </summary>
  struct EncounterLocation {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The location where the encounter takes place.
    /// </summary>
    Reference* _locationField;
    /// <summary>
    /// When the patient is no longer active at a location, then the period end date is entered, and the status may be changed to completed.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// This information is de-normalized from the Location resource to support the easier understanding of the encounter resource and processing in messaging or query.
    /// There may be many levels in the hierachy, and this may only pic specific levels that are required for a specific usage scenario.
    /// </summary>
    CodeableConcept* _physicalType;
    /// <summary>
    /// Time period during which the patient was present at the location.
    /// </summary>
    Period* _period;
  };
  /// <summary>
  /// An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.
  /// </summary>
  struct Encounter {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Identifier(s) by which this encounter is known.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// Note that internal business rules will determine the appropriate transitions that may occur between statuses (and also classes).
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// The current status is always found in the current version of the resource, not the status history.
    /// </summary>
    size_t _statusHistory_count;
    EncounterStatusHistory** _statusHistory;
    /// <summary>
    /// Concepts representing classification of patient encounter such as ambulatory (outpatient), inpatient, emergency, home health or others due to local variations.
    /// </summary>
    Coding* _class;
    /// <summary>
    /// The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transitions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kind of discharge from emergency to inpatient.
    /// </summary>
    size_t _classHistory_count;
    EncounterClassHistory** _classHistory;
    /// <summary>
    /// Since there are many ways to further classify encounters, this element is 0..*.
    /// </summary>
    size_t _type_count;
    CodeableConcept** _type;
    /// <summary>
    /// Broad categorization of the service that is to be provided (e.g. cardiology).
    /// </summary>
    CodeableConcept* _serviceType;
    /// <summary>
    /// Indicates the urgency of the encounter.
    /// </summary>
    CodeableConcept* _priority;
    /// <summary>
    /// While the encounter is always about the patient, the patient might not actually be known in all contexts of use, and there may be a group of patients that could be anonymous (such as in a group therapy for Alcoholics Anonymous - where the recording of the encounter could be used for billing on the number of people/staff and not important to the context of the specific patients) or alternately in veterinary care a herd of sheep receiving treatment (where the animals are not individually tracked).
    /// </summary>
    Reference* _subject;
    /// <summary>
    /// Where a specific encounter should be classified as a part of a specific episode(s) of care this field should be used. This association can facilitate grouping of related encounters together for a specific purpose, such as government reporting, issue tracking, association via a common problem.  The association is recorded on the encounter as these are typically created after the episode of care and grouped on entry rather than editing the episode of care to append another encounter to it (the episode of care could span years).
    /// </summary>
    size_t _episodeOfCare_count;
    Reference** _episodeOfCare;
    /// <summary>
    /// The request this encounter satisfies (e.g. incoming referral or procedure request).
    /// </summary>
    size_t _basedOn_count;
    Reference** _basedOn;
    /// <summary>
    /// The list of people responsible for providing the service.
    /// </summary>
    size_t _participant_count;
    EncounterParticipant** _participant;
    /// <summary>
    /// The appointment that scheduled this encounter.
    /// </summary>
    size_t _appointment_count;
    Reference** _appointment;
    /// <summary>
    /// If not (yet) known, the end of the Period may be omitted.
    /// </summary>
    Period* _period;
    /// <summary>
    /// May differ from the time the Encounter.period lasted because of leave of absence.
    /// </summary>
    Duration* _length;
    /// <summary>
    /// For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis).
    /// </summary>
    size_t _reasonCode_count;
    CodeableConcept** _reasonCode;
    /// <summary>
    /// For systems that need to know which was the primary diagnosis, these will be marked with the standard extension primaryDiagnosis (which is a sequence value rather than a flag, 1 = primary diagnosis).
    /// </summary>
    size_t _reasonReference_count;
    Reference** _reasonReference;
    /// <summary>
    /// The list of diagnosis relevant to this encounter.
    /// </summary>
    size_t _diagnosis_count;
    EncounterDiagnosis** _diagnosis;
    /// <summary>
    /// The billing system may choose to allocate billable items associated with the Encounter to different referenced Accounts based on internal business rules.
    /// </summary>
    size_t _account_count;
    Reference** _account;
    /// <summary>
    /// An Encounter may cover more than just the inpatient stay. Contexts such as outpatients, community clinics, and aged care facilities are also included.
    /// The duration recorded in the period of this encounter covers the entire scope of this hospitalization record.
    /// </summary>
    EncounterHospitalization* _hospitalization;
    /// <summary>
    /// Virtual encounters can be recorded in the Encounter by specifying a location reference to a location of type "kind" such as "client's home" and an encounter.class = "virtual".
    /// </summary>
    size_t _location_count;
    EncounterLocation** _location;
    /// <summary>
    /// The organization that is primarily responsible for this Encounter's services. This MAY be the same as the organization on the Patient record, however it could be different, such as if the actor performing the services was from an external organization (which may be billed seperately) for an external consultation.  Refer to the example bundle showing an abbreviated set of Encounters for a colonoscopy.
    /// </summary>
    Reference* _serviceProvider;
    /// <summary>
    /// This is also used for associating a child's encounter back to the mother's encounter.
    /// Refer to the Notes section in the Patient resource for further details.
    /// </summary>
    Reference* _partOf;
  };
};
