// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// Indicates who or what performed or participated in the charged service.
  /// </summary>
  struct ChargeItemPerformer {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Describes the type of performance or participation(e.g. primary surgeon, anesthesiologiest, etc.).
    /// </summary>
    CodeableConcept* _function;
    /// <summary>
    /// The device, practitioner, etc. who performed or participated in the service.
    /// </summary>
    Reference* _actor;
  };
  /// <summary>
  /// The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.
  /// </summary>
  struct ChargeItem {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Identifiers assigned to this event performer or other systems.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// References the (external) source of pricing information, rules of application for the code this ChargeItem uses.
    /// </summary>
    size_t _definitionUri_count;
    NullableString8** _definitionUri;
    /// <summary>
    /// References the source of pricing information, rules of application for the code this ChargeItem uses.
    /// </summary>
    size_t _definitionCanonical_count;
    NullableString8** _definitionCanonical;
    /// <summary>
    /// Unknown does not represent "other" - one of the defined statuses must apply.  Unknown is used when the authoring system is not sure what the current status is.
    /// This element is labeled as a modifier because the status contains the code entered-in-error that marks the charge item as not currently valid.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// ChargeItems can be grouped to larger ChargeItems covering the whole set.
    /// </summary>
    size_t _partOf_count;
    Reference** _partOf;
    /// <summary>
    /// A code that identifies the charge, like a billing code.
    /// </summary>
    CodeableConcept* _code;
    /// <summary>
    /// The individual or set of individuals the action is being or was performed on.
    /// </summary>
    Reference* _subject;
    /// <summary>
    /// The encounter or episode of care that establishes the context for this event.
    /// </summary>
    Reference* _context;
    /// <summary>
    /// The list of types may be constrained as appropriate for the type of charge item.
    /// </summary>
    ISO8601_Time* _occurrenceDateTime;
    /// <summary>
    /// The list of types may be constrained as appropriate for the type of charge item.
    /// </summary>
    Period* _occurrencePeriod;
    /// <summary>
    /// The list of types may be constrained as appropriate for the type of charge item.
    /// </summary>
    Timing* _occurrenceTiming;
    /// <summary>
    /// Indicates who or what performed or participated in the charged service.
    /// </summary>
    size_t _performer_count;
    ChargeItemPerformer** _performer;
    /// <summary>
    /// Practitioners and Devices can be associated with multiple organizations. It has to be made clear, on behalf of which Organization the services have been rendered.
    /// </summary>
    Reference* _performingOrganization;
    /// <summary>
    /// The rendered Service might not be associated with a Request. This property indicates which Organization requested the services to be rendered. (In many cases, this may just be the Department associated with the Encounter.location).
    /// </summary>
    Reference* _requestingOrganization;
    /// <summary>
    /// The costCenter could either be given as a reference to an Organization(Role) resource or as the identifier of the cost center determined by Reference.identifier.value and Reference.identifier.system, depending on use case requirements.
    /// </summary>
    Reference* _costCenter;
    /// <summary>
    /// In many cases this may just be a value, if the underlying units are implicit in the definition of the charge item code.
    /// </summary>
    Quantity* _quantity;
    /// <summary>
    /// Only used if not implicit in code found in Condition.code. If the use case requires attributes from the BodySite resource (e.g. to identify and track separately) then use the standard extension [bodySite](extension-bodysite.html).  May be a summary code, or a reference to a very precise definition of the location, or both.
    /// </summary>
    size_t _bodysite_count;
    CodeableConcept** _bodysite;
    /// <summary>
    /// There is no reason to carry the factor in the instance of a ChargeItem unless special circumstances require a manual override. The factors are usually defined by a set of rules in a back catalogue of the billing codes  (see ChargeItem.definition). Derived profiles may require a ChargeItem.overrideReason to be provided if either factor or price are manually overridden.
    /// </summary>
    NullableString8* _factorOverride;
    /// <summary>
    /// There is no reason to carry the price in the instance of a ChargeItem unless circumstances require a manual override. The list prices or are usually defined in a back catalogue of the billing codes  (see ChargeItem.definition). Derived profiles may require a ChargeItem.overrideReason to be provided if either factor or price are manually overridden.
    /// </summary>
    Money* _priceOverride;
    /// <summary>
    /// Derived Profiles may choose to add invariants requiring this field to be populated if either priceOverride or factorOverride have been filled.
    /// </summary>
    string* _overrideReason;
    /// <summary>
    /// The enterer is also the person considered responsible for factor/price overrides if applicable.
    /// </summary>
    Reference* _enterer;
    /// <summary>
    /// The actual date when the service associated with the charge has been rendered is captured in occurrence[x].
    /// </summary>
    ISO8601_Time* _enteredDate;
    /// <summary>
    /// If the application of the charge item requires a reason to be given, it can be captured here. Textual reasons can be captured using reasonCode.text.
    /// </summary>
    size_t _reason_count;
    CodeableConcept** _reason;
    /// <summary>
    /// Indicated the rendered service that caused this charge.
    /// </summary>
    size_t _service_count;
    Reference** _service;
    /// <summary>
    /// Identifies the device, food, drug or other product being charged either by type code or reference to an instance.
    /// </summary>
    Reference* _productReference;
    /// <summary>
    /// Identifies the device, food, drug or other product being charged either by type code or reference to an instance.
    /// </summary>
    CodeableConcept* _productCodeableConcept;
    /// <summary>
    /// Systems posting the ChargeItems might not always be able to determine, which accounts the Items need to be places into. It is up to the postprocessing Financial System to apply internal rules to decide based on the Encounter/EpisodeOfCare/Patient/Coverage context and the type of ChargeItem, which Account is appropriate.
    /// </summary>
    size_t _account_count;
    Reference** _account;
    /// <summary>
    /// Comments made about the event by the performer, subject or other participants.
    /// </summary>
    size_t _note_count;
    Annotation** _note;
    /// <summary>
    /// Further information supporting this charge.
    /// </summary>
    size_t _supportingInformation_count;
    Reference** _supportingInformation;
  };
};
