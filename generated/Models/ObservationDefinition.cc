// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// Characteristics for quantitative results of this observation.
  /// </summary>
  struct ObservationDefinitionQuantitativeDetails {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Customary unit used to report quantitative results of observations conforming to this ObservationDefinition.
    /// </summary>
    CodeableConcept* _customaryUnit;
    /// <summary>
    /// SI unit used to report quantitative results of observations conforming to this ObservationDefinition.
    /// </summary>
    CodeableConcept* _unit;
    /// <summary>
    /// Factor for converting value expressed with SI unit to value expressed with customary unit.
    /// </summary>
    NullableString8* _conversionFactor;
    /// <summary>
    /// Number of digits after decimal separator when the results of such observations are of type Quantity.
    /// </summary>
    NullableInt32* _decimalPrecision;
  };
  /// <summary>
  /// Multiple  ranges of results qualified by different contexts for ordinal or continuous observations conforming to this ObservationDefinition.
  /// </summary>
  struct ObservationDefinitionQualifiedInterval {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The category of interval of values for continuous or ordinal observations conforming to this ObservationDefinition.
    /// </summary>
    NullableString8* _category;
    /// <summary>
    /// The low and high values determining the interval. There may be only one of the two.
    /// </summary>
    Range* _range;
    /// <summary>
    /// Codes to indicate the health context the range applies to. For example, the normal or therapeutic range.
    /// </summary>
    CodeableConcept* _context;
    /// <summary>
    /// If this element is not present then the global population is assumed.
    /// </summary>
    size_t _appliesTo_count;
    CodeableConcept** _appliesTo;
    /// <summary>
    /// Sex of the population the range applies to.
    /// </summary>
    NullableString8* _gender;
    /// <summary>
    /// Some analytes vary greatly over age.
    /// </summary>
    Range* _age;
    /// <summary>
    /// The gestational age to which this reference range is applicable, in the context of pregnancy.
    /// </summary>
    Range* _gestationalAge;
    /// <summary>
    /// Text based condition for which the reference range is valid.
    /// </summary>
    string* _condition;
  };
  /// <summary>
  /// Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.
  /// </summary>
  struct ObservationDefinition {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// This element allows various categorization schemes based on the ownerâ€™s definition of the category and effectively multiple categories can be used for one instance of ObservationDefinition. The level of granularity is defined by the category concepts in the value set.
    /// </summary>
    size_t _category_count;
    CodeableConcept** _category;
    /// <summary>
    /// Describes what will be observed. Sometimes this is called the observation "name".
    /// </summary>
    CodeableConcept* _code;
    /// <summary>
    /// A unique identifier assigned to this ObservationDefinition artifact.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// The data types allowed for the value element of the instance observations conforming to this ObservationDefinition.
    /// </summary>
    size_t _permittedDataType_count;
    NullableString8** _permittedDataType;
    /// <summary>
    /// An example of observation allowing multiple results is "bacteria identified by culture". Conversely, the measurement of a potassium level allows a single result.
    /// </summary>
    NullableBoolean* _multipleResultsAllowed;
    /// <summary>
    /// Only used if not implicit in observation code.
    /// </summary>
    CodeableConcept* _method;
    /// <summary>
    /// The preferred name to be used when reporting the results of observations conforming to this ObservationDefinition.
    /// </summary>
    string* _preferredReportName;
    /// <summary>
    /// Characteristics for quantitative results of this observation.
    /// </summary>
    ObservationDefinitionQuantitativeDetails* _quantitativeDetails;
    /// <summary>
    /// Multiple  ranges of results qualified by different contexts for ordinal or continuous observations conforming to this ObservationDefinition.
    /// </summary>
    size_t _qualifiedInterval_count;
    ObservationDefinitionQualifiedInterval** _qualifiedInterval;
    /// <summary>
    /// The set of valid coded results for the observations  conforming to this ObservationDefinition.
    /// </summary>
    Reference* _validCodedValueSet;
    /// <summary>
    /// The set of normal coded results for the observations conforming to this ObservationDefinition.
    /// </summary>
    Reference* _normalCodedValueSet;
    /// <summary>
    /// The set of abnormal coded results for the observation conforming to this ObservationDefinition.
    /// </summary>
    Reference* _abnormalCodedValueSet;
    /// <summary>
    /// The set of critical coded results for the observation conforming to this ObservationDefinition.
    /// </summary>
    Reference* _criticalCodedValueSet;
  };
};
