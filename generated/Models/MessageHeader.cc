// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// There SHOULD be at least one destination, but in some circumstances, the source system is unaware of any particular destination system.
  /// </summary>
  struct MessageHeaderDestination {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Human-readable name for the target system.
    /// </summary>
    string* _name;
    /// <summary>
    /// Identifies the target end system in situations where the initial message transmission is to an intermediary system.
    /// </summary>
    Reference* _target;
    /// <summary>
    /// The id may be a non-resolvable URI for systems that do not use standard network-based addresses.
    /// </summary>
    NullableString8* _endpoint;
    /// <summary>
    /// Allows data conveyed by a message to be addressed to a particular person or department when routing to a specific application isn't sufficient.
    /// </summary>
    Reference* _receiver;
  };
  /// <summary>
  /// The source application from which this message originated.
  /// </summary>
  struct MessageHeaderSource {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Human-readable name for the source system.
    /// </summary>
    string* _name;
    /// <summary>
    /// May include configuration or other information useful in debugging.
    /// </summary>
    string* _software;
    /// <summary>
    /// Can convey versions of multiple systems in situations where a message passes through multiple hands.
    /// </summary>
    string* _version;
    /// <summary>
    /// An e-mail, phone, website or other contact point to use to resolve issues with message communications.
    /// </summary>
    ContactPoint* _contact;
    /// <summary>
    /// The id may be a non-resolvable URI for systems that do not use standard network-based addresses.
    /// </summary>
    NullableString8* _endpoint;
  };
  /// <summary>
  /// Information about the message that this message is a response to.  Only present if this message is a response.
  /// </summary>
  struct MessageHeaderResponse {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The MessageHeader.id of the message to which this message is a response.
    /// </summary>
    NullableString8* _identifier;
    /// <summary>
    /// This is a generic response to the request message. Specific data for the response will be found in MessageHeader.focus.
    /// </summary>
    NullableString8* _code;
    /// <summary>
    /// This SHALL be contained in the bundle. If any of the issues are errors, the response code SHALL be an error.
    /// </summary>
    Reference* _details;
  };
  /// <summary>
  /// The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.
  /// </summary>
  struct MessageHeader {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The time of the event will be found in the focus resource. The time of the message will be found in [Bundle.timestamp](bundle-definitions.html#Bundle.timestamp).
    /// </summary>
    Coding* _eventCoding;
    /// <summary>
    /// The time of the event will be found in the focus resource. The time of the message will be found in [Bundle.timestamp](bundle-definitions.html#Bundle.timestamp).
    /// </summary>
    NullableString8* _eventUri;
    /// <summary>
    /// There SHOULD be at least one destination, but in some circumstances, the source system is unaware of any particular destination system.
    /// </summary>
    size_t _destination_count;
    MessageHeaderDestination** _destination;
    /// <summary>
    /// Use case is for where a (trusted) sending system is responsible for multiple organizations, and therefore cannot differentiate based on source endpoint / authentication alone.
    /// </summary>
    Reference* _sender;
    /// <summary>
    /// Usually only for the request but can be used in a response.
    /// </summary>
    Reference* _enterer;
    /// <summary>
    /// Usually only for the request but can be used in a response.
    /// </summary>
    Reference* _author;
    /// <summary>
    /// The source application from which this message originated.
    /// </summary>
    MessageHeaderSource* _source;
    /// <summary>
    /// Usually only for the request but can be used in a response.
    /// </summary>
    Reference* _responsible;
    /// <summary>
    /// Coded indication of the cause for the event - indicates  a reason for the occurrence of the event that is a focus of this message.
    /// </summary>
    CodeableConcept* _reason;
    /// <summary>
    /// Information about the message that this message is a response to.  Only present if this message is a response.
    /// </summary>
    MessageHeaderResponse* _response;
    /// <summary>
    /// The data is defined where the transaction type is defined. The transaction data is always included in the bundle that is the full message.  Only the root resource is specified.  The resources it references should be contained in the bundle but are not also listed here.  Multiple repetitions are allowed to cater for merges and other situations with multiple focal targets.
    /// </summary>
    size_t _focus_count;
    Reference** _focus;
    /// <summary>
    /// Permanent link to the MessageDefinition for this message.
    /// </summary>
    NullableString8* _definition;
  };
};
