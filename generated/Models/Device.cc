// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// UDI may identify an unique instance of a device, or it may only identify the type of the device.  See [UDI mappings](device-mappings.html#udi) for a complete mapping of UDI parts to Device.
  /// </summary>
  struct DeviceUdiCarrier {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.
    /// </summary>
    string* _deviceIdentifier;
    /// <summary>
    /// Organization that is charged with issuing UDIs for devices.  For example, the US FDA issuers include :
    /// 1) GS1: 
    /// http://hl7.org/fhir/NamingSystem/gs1-di, 
    /// 2) HIBCC:
    /// http://hl7.org/fhir/NamingSystem/hibcc-dI, 
    /// 3) ICCBBA for blood containers:
    /// http://hl7.org/fhir/NamingSystem/iccbba-blood-di, 
    /// 4) ICCBA for other devices:
    /// http://hl7.org/fhir/NamingSystem/iccbba-other-di.
    /// </summary>
    NullableString8* _issuer;
    /// <summary>
    /// The identity of the authoritative source for UDI generation within a  jurisdiction.  All UDIs are globally unique within a single namespace with the appropriate repository uri as the system.  For example,  UDIs of devices managed in the U.S. by the FDA, the value is  http://hl7.org/fhir/NamingSystem/fda-udi.
    /// </summary>
    NullableString8* _jurisdiction;
    /// <summary>
    /// The AIDC form of UDIs should be scanned or otherwise used for the identification of the device whenever possible to minimize errors in records resulting from manual transcriptions. If separate barcodes for DI and PI are present, concatenate the string with DI first and in order of human readable expression on label.
    /// </summary>
    NullableString8* _carrierAIDC;
    /// <summary>
    /// If separate barcodes for DI and PI are present, concatenate the string with DI first and in order of human readable expression on label.
    /// </summary>
    string* _carrierHRF;
    /// <summary>
    /// A coded entry to indicate how the data was entered.
    /// </summary>
    NullableString8* _entryType;
  };
  /// <summary>
  /// This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.
  /// </summary>
  struct DeviceDeviceName {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The name of the device.
    /// </summary>
    string* _name;
    /// <summary>
    /// The type of deviceName.
    /// UDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.
    /// </summary>
    NullableString8* _type;
  };
  /// <summary>
  /// The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.
  /// </summary>
  struct DeviceSpecialization {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The standard that is used to operate and communicate.
    /// </summary>
    CodeableConcept* _systemType;
    /// <summary>
    /// The version of the standard that is used to operate and communicate.
    /// </summary>
    string* _version;
  };
  /// <summary>
  /// The actual design of the device or software version running on the device.
  /// </summary>
  struct DeviceVersion {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The type of the device version.
    /// </summary>
    CodeableConcept* _type;
    /// <summary>
    /// A single component of the device version.
    /// </summary>
    Identifier* _component;
    /// <summary>
    /// The version text.
    /// </summary>
    string* _value;
  };
  /// <summary>
  /// The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.
  /// </summary>
  struct DeviceProperty {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Code that specifies the property DeviceDefinitionPropetyCode (Extensible).
    /// </summary>
    CodeableConcept* _type;
    /// <summary>
    /// Property value as a quantity.
    /// </summary>
    size_t _valueQuantity_count;
    Quantity** _valueQuantity;
    /// <summary>
    /// Property value as a code, e.g., NTP4 (synced to NTP).
    /// </summary>
    size_t _valueCode_count;
    CodeableConcept** _valueCode;
  };
  /// <summary>
  /// A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.
  /// </summary>
  struct Device {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The barcode string from a barcode present on a device label or package may identify the instance, include names given to the device in local usage, or may identify the type of device. If the identifier identifies the type of device, Device.type element should be used.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// The reference to the definition for the device.
    /// </summary>
    Reference* _definition;
    /// <summary>
    /// UDI may identify an unique instance of a device, or it may only identify the type of the device.  See [UDI mappings](device-mappings.html#udi) for a complete mapping of UDI parts to Device.
    /// </summary>
    size_t _udiCarrier_count;
    DeviceUdiCarrier** _udiCarrier;
    /// <summary>
    /// This element is labeled as a modifier because the status contains the codes inactive and entered-in-error that mark the device (record)as not currently valid.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// Reason for the dtatus of the Device availability.
    /// </summary>
    size_t _statusReason_count;
    CodeableConcept** _statusReason;
    /// <summary>
    /// For example, this applies to devices in the United States regulated under *Code of Federal Regulation 21CFR§1271.290(c)*.
    /// </summary>
    string* _distinctIdentifier;
    /// <summary>
    /// A name of the manufacturer.
    /// </summary>
    string* _manufacturer;
    /// <summary>
    /// The date and time when the device was manufactured.
    /// </summary>
    ISO8601_Time* _manufactureDate;
    /// <summary>
    /// The date and time beyond which this device is no longer valid or should not be used (if applicable).
    /// </summary>
    ISO8601_Time* _expirationDate;
    /// <summary>
    /// Lot number assigned by the manufacturer.
    /// </summary>
    string* _lotNumber;
    /// <summary>
    /// Alphanumeric Maximum 20.
    /// </summary>
    string* _serialNumber;
    /// <summary>
    /// This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.
    /// </summary>
    size_t _deviceName_count;
    DeviceDeviceName** _deviceName;
    /// <summary>
    /// The model number for the device.
    /// </summary>
    string* _modelNumber;
    /// <summary>
    /// Alphanumeric Maximum 20.
    /// </summary>
    string* _partNumber;
    /// <summary>
    /// The kind or type of device.
    /// </summary>
    CodeableConcept* _type;
    /// <summary>
    /// The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.
    /// </summary>
    size_t _specialization_count;
    DeviceSpecialization** _specialization;
    /// <summary>
    /// The actual design of the device or software version running on the device.
    /// </summary>
    size_t _version_count;
    DeviceVersion** _version;
    /// <summary>
    /// The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.
    /// </summary>
    size_t _property_count;
    DeviceProperty** _property;
    /// <summary>
    /// Patient information, If the device is affixed to a person.
    /// </summary>
    Reference* _patient;
    /// <summary>
    /// An organization that is responsible for the provision and ongoing maintenance of the device.
    /// </summary>
    Reference* _owner;
    /// <summary>
    /// used for troubleshooting etc.
    /// </summary>
    size_t _contact_count;
    ContactPoint** _contact;
    /// <summary>
    /// The place where the device can be found.
    /// </summary>
    Reference* _location;
    /// <summary>
    /// If the device is running a FHIR server, the network address should  be the Base URL from which a conformance statement may be retrieved.
    /// </summary>
    NullableString8* _url;
    /// <summary>
    /// Descriptive information, usage information or implantation information that is not captured in an existing element.
    /// </summary>
    size_t _note_count;
    Annotation** _note;
    /// <summary>
    /// Provides additional safety characteristics about a medical device.  For example devices containing latex.
    /// </summary>
    size_t _safety_count;
    CodeableConcept** _safety;
    /// <summary>
    /// The parent device.
    /// </summary>
    Reference* _parent;
  };
};
