// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// Only list each attester once.
  /// </summary>
  struct CompositionAttester {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The type of attestation the authenticator offers.
    /// </summary>
    NullableString8* _mode;
    /// <summary>
    /// When the composition was attested by the party.
    /// </summary>
    ISO8601_Time* _time;
    /// <summary>
    /// Who attested the composition in the specified way.
    /// </summary>
    Reference* _party;
  };
  /// <summary>
  /// A document is a version specific composition.
  /// </summary>
  struct CompositionRelatesTo {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// If this document appends another document, then the document cannot be fully understood without also accessing the referenced document.
    /// </summary>
    NullableString8* _code;
    /// <summary>
    /// The target composition/document of this relationship.
    /// </summary>
    Identifier* _targetIdentifier;
    /// <summary>
    /// The target composition/document of this relationship.
    /// </summary>
    Reference* _targetReference;
  };
  /// <summary>
  /// The event needs to be consistent with the type element, though can provide further information if desired.
  /// </summary>
  struct CompositionEvent {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// An event can further specialize the act inherent in the typeCode, such as where it is simply "Procedure Report" and the procedure was a "colonoscopy". If one or more eventCodes are included, they SHALL NOT conflict with the values inherent in the classCode, practiceSettingCode or typeCode, as such a conflict would create an ambiguous situation. This short list of codes is provided to be used as key words for certain types of queries.
    /// </summary>
    size_t _code_count;
    CodeableConcept** _code;
    /// <summary>
    /// The period of time covered by the documentation. There is no assertion that the documentation is a complete representation for this period, only that it documents events during this time.
    /// </summary>
    Period* _period;
    /// <summary>
    /// The description and/or reference of the event(s) being documented. For example, this could be used to document such a colonoscopy or an appendectomy.
    /// </summary>
    size_t _detail_count;
    Reference** _detail;
  };
  /// <summary>
  /// The root of the sections that make up the composition.
  /// </summary>
  struct CompositionSection {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The title identifies the section for a human reader. The title must be consistent with the narrative of the resource that is the target of the section.content reference. Generally, sections SHOULD have titles, but in some documents, it is unnecessary or inappropriate. Typically, this is where a section has subsections that have their own adequately distinguishing title,  or documents that only have a single section. Most Implementation Guides will make section title to be a required element.
    /// </summary>
    string* _title;
    /// <summary>
    /// The code identifies the section for an automated processor of the document. This is particularly relevant when using profiles to control the structure of the document.   
    /// If the section has content (instead of sub-sections), the section.code does not change the meaning or interpretation of the resource that is the content of the section in the comments for the section.code.
    /// </summary>
    CodeableConcept* _code;
    /// <summary>
    /// Identifies who is responsible for the information in this section, not necessarily who typed it in.
    /// </summary>
    size_t _author_count;
    Reference** _author;
    /// <summary>
    /// Typically, sections in a doument are about the subject of the document, whether that is a  patient, or group of patients, location, or device, or whatever. For some kind of documents, some sections actually contain data about related entities. Typical examples are  a section in a newborn discharge summary concerning the mother, or family history documents, with a section about each family member, though there are many other examples.
    /// </summary>
    Reference* _focus;
    /// <summary>
    /// Document profiles may define what content should be represented in the narrative to ensure clinical safety.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This element is labeled as a modifier because a change list must not be misunderstood as a complete list.
    /// </summary>
    NullableString8* _mode;
    /// <summary>
    /// Applications SHOULD render ordered lists in the order provided, but MAY allow users to re-order based on their own preferences as well. If there is no order specified, the order is unknown, though there may still be some order.
    /// </summary>
    CodeableConcept* _orderedBy;
    /// <summary>
    /// If there are no entries in the list, an emptyReason SHOULD be provided.
    /// </summary>
    size_t _entry_count;
    Reference** _entry;
    /// <summary>
    /// The various reasons for an empty section make a significant interpretation to its interpretation. Note that this code is for use when the entire section content has been suppressed, and not for when individual items are omitted - implementers may consider using a text note or a flag on an entry in these cases.
    /// </summary>
    CodeableConcept* _emptyReason;
    /// <summary>
    /// Nested sections are primarily used to help human readers navigate to particular portions of the document.
    /// </summary>
    size_t _sectionField_count;
    CompositionSection** _sectionField;
  };
  /// <summary>
  /// A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).
  /// </summary>
  struct Composition {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Similar to ClinicalDocument/setId in CDA. See discussion in resource definition for how these relate.
    /// </summary>
    Identifier* _identifier;
    /// <summary>
    /// If a composition is marked as withdrawn, the compositions/documents in the series, or data from the composition or document series, should never be displayed to a user without being clearly marked as untrustworthy. The flag "entered-in-error" is why this element is labeled as a modifier of other elements.   
    /// Some reporting work flows require that the original narrative of a final document never be altered; instead, only new narrative can be added. The composition resource has no explicit status for explicitly noting whether this business rule is in effect. This would be handled by an extension if required.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// For Composition type, LOINC is ubiquitous and strongly endorsed by HL7. Most implementation guides will require a specific LOINC code, or use LOINC as an extensible binding.
    /// </summary>
    CodeableConcept* _type;
    /// <summary>
    /// This is a metadata field from [XDS/MHD](http://wiki.ihe.net/index.php?title=Mobile_access_to_Health_Documents_(MHD)).
    /// </summary>
    size_t _category_count;
    CodeableConcept** _category;
    /// <summary>
    /// For clinical documents, this is usually the patient.
    /// </summary>
    Reference* _subject;
    /// <summary>
    /// Describes the clinical encounter or type of care this documentation is associated with.
    /// </summary>
    Reference* _encounter;
    /// <summary>
    /// The Last Modified Date on the composition may be after the date of the document was attested without being changed.
    /// </summary>
    ISO8601_Time* _date;
    /// <summary>
    /// Identifies who is responsible for the information in the composition, not necessarily who typed it in.
    /// </summary>
    size_t _author_count;
    Reference** _author;
    /// <summary>
    /// For many compositions, the title is the same as the text or a display name of Composition.type (e.g. a "consultation" or "progress note"). Note that CDA does not make title mandatory, but there are no known cases where it is useful for title to be omitted, so it is mandatory here. Feedback on this requirement is welcome during the trial use period.
    /// </summary>
    string* _title;
    /// <summary>
    /// The exact use of this element, and enforcement and issues related to highly sensitive documents are out of scope for the base specification, and delegated to implementation profiles (see security section).  This element is labeled as a modifier because highly confidential documents must not be treated as if they are not.
    /// </summary>
    NullableString8* _confidentiality;
    /// <summary>
    /// Only list each attester once.
    /// </summary>
    size_t _attester_count;
    CompositionAttester** _attester;
    /// <summary>
    /// This is useful when documents are derived from a composition - provides guidance for how to get the latest version of the document. This is optional because this is sometimes not known by the authoring system, and can be inferred by context. However, it is important that this information be known when working with a derived document, so providing a custodian is encouraged.
    /// </summary>
    Reference* _custodian;
    /// <summary>
    /// A document is a version specific composition.
    /// </summary>
    size_t _relatesTo_count;
    CompositionRelatesTo** _relatesTo;
    /// <summary>
    /// The event needs to be consistent with the type element, though can provide further information if desired.
    /// </summary>
    size_t _event_count;
    CompositionEvent** _event;
    /// <summary>
    /// The root of the sections that make up the composition.
    /// </summary>
    size_t _section_count;
    CompositionSection** _section;
  };
};
