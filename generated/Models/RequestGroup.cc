// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// When multiple conditions of the same kind are present, the effects are combined using AND semantics, so the overall condition is true only if all of the conditions are true.
  /// </summary>
  struct RequestGroupActionCondition {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Applicability criteria are used to determine immediate applicability when a plan definition is applied to a given context. Start and stop criteria are carried through application and used to describe enter/exit criteria for an action.
    /// </summary>
    NullableString8* _kind;
    /// <summary>
    /// The expression may be inlined, or may be a reference to a named expression within a logic library referenced by the library element.
    /// </summary>
    Expression* _expression;
  };
  /// <summary>
  /// A relationship to another action such as "before" or "30-60 minutes after start of".
  /// </summary>
  struct RequestGroupActionRelatedAction {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The element id of the action this is related to.
    /// </summary>
    NullableString8* _actionId;
    /// <summary>
    /// The relationship of this action to the related action.
    /// </summary>
    NullableString8* _relationship;
    /// <summary>
    /// A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.
    /// </summary>
    Duration* _offsetDuration;
    /// <summary>
    /// A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.
    /// </summary>
    Range* _offsetRange;
  };
  /// <summary>
  /// The actions, if any, produced by the evaluation of the artifact.
  /// </summary>
  struct RequestGroupAction {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// A user-visible prefix for the action.
    /// </summary>
    string* _prefix;
    /// <summary>
    /// The title of the action displayed to a user.
    /// </summary>
    string* _title;
    /// <summary>
    /// A short description of the action used to provide a summary to display to the user.
    /// </summary>
    string* _description;
    /// <summary>
    /// A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.
    /// </summary>
    string* _textEquivalent;
    /// <summary>
    /// Indicates how quickly the action should be addressed with respect to other actions.
    /// </summary>
    NullableString8* _priority;
    /// <summary>
    /// A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a section of a documentation template.
    /// </summary>
    size_t _code_count;
    CodeableConcept** _code;
    /// <summary>
    /// Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.
    /// </summary>
    size_t _documentation_count;
    RelatedArtifact** _documentation;
    /// <summary>
    /// When multiple conditions of the same kind are present, the effects are combined using AND semantics, so the overall condition is true only if all of the conditions are true.
    /// </summary>
    size_t _condition_count;
    RequestGroupActionCondition** _condition;
    /// <summary>
    /// A relationship to another action such as "before" or "30-60 minutes after start of".
    /// </summary>
    size_t _relatedAction_count;
    RequestGroupActionRelatedAction** _relatedAction;
    /// <summary>
    /// An optional value describing when the action should be performed.
    /// </summary>
    ISO8601_Time* _timingDateTime;
    /// <summary>
    /// An optional value describing when the action should be performed.
    /// </summary>
    Age* _timingAge;
    /// <summary>
    /// An optional value describing when the action should be performed.
    /// </summary>
    Period* _timingPeriod;
    /// <summary>
    /// An optional value describing when the action should be performed.
    /// </summary>
    Duration* _timingDuration;
    /// <summary>
    /// An optional value describing when the action should be performed.
    /// </summary>
    Range* _timingRange;
    /// <summary>
    /// An optional value describing when the action should be performed.
    /// </summary>
    Timing* _timingTiming;
    /// <summary>
    /// The participant that should perform or be responsible for this action.
    /// </summary>
    size_t _participant_count;
    Reference** _participant;
    /// <summary>
    /// The type of action to perform (create, update, remove).
    /// </summary>
    CodeableConcept* _type;
    /// <summary>
    /// Defines the grouping behavior for the action and its children.
    /// </summary>
    NullableString8* _groupingBehavior;
    /// <summary>
    /// Defines the selection behavior for the action and its children.
    /// </summary>
    NullableString8* _selectionBehavior;
    /// <summary>
    /// Defines expectations around whether an action is required.
    /// </summary>
    NullableString8* _requiredBehavior;
    /// <summary>
    /// Defines whether the action should usually be preselected.
    /// </summary>
    NullableString8* _precheckBehavior;
    /// <summary>
    /// Defines whether the action can be selected multiple times.
    /// </summary>
    NullableString8* _cardinalityBehavior;
    /// <summary>
    /// The target resource SHALL be a [Request](request.html) resource with a Request.intent set to "option".
    /// </summary>
    Reference* _resource;
    /// <summary>
    /// Sub actions.
    /// </summary>
    size_t _actionField_count;
    RequestGroupAction** _actionField;
  };
  /// <summary>
  /// A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".
  /// </summary>
  struct RequestGroup {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Allows a service to provide a unique, business identifier for the request.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.
    /// </summary>
    size_t _instantiatesCanonical_count;
    NullableString8** _instantiatesCanonical;
    /// <summary>
    /// A URL referencing an externally defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.
    /// </summary>
    size_t _instantiatesUri_count;
    NullableString8** _instantiatesUri;
    /// <summary>
    /// A plan, proposal or order that is fulfilled in whole or in part by this request.
    /// </summary>
    size_t _basedOn_count;
    Reference** _basedOn;
    /// <summary>
    /// The replacement could be because the initial request was immediately rejected (due to an issue) or because the previous request was completed, but the need for the action described by the request remains ongoing.
    /// </summary>
    size_t _replaces_count;
    Reference** _replaces;
    /// <summary>
    /// Requests are linked either by a "basedOn" relationship (i.e. one request is fulfilling another) or by having a common requisition.  Requests that are part of the same requisition are generally treated independently from the perspective of changing their state or maintaining them after initial creation.
    /// </summary>
    Identifier* _groupIdentifier;
    /// <summary>
    /// The current state of the request. For request groups, the status reflects the status of all the requests in the group.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// Indicates the level of authority/intentionality associated with the request and where the request fits into the workflow chain.
    /// </summary>
    NullableString8* _intent;
    /// <summary>
    /// Indicates how quickly the request should be addressed with respect to other requests.
    /// </summary>
    NullableString8* _priority;
    /// <summary>
    /// This element can be used to provide a code that captures the meaning of the request group as a whole, as opposed to the code of the action element, which captures the meaning of the individual actions within the request group.
    /// </summary>
    CodeableConcept* _code;
    /// <summary>
    /// The subject for which the request group was created.
    /// </summary>
    Reference* _subject;
    /// <summary>
    /// Describes the context of the request group, if any.
    /// </summary>
    Reference* _encounter;
    /// <summary>
    /// Indicates when the request group was created.
    /// </summary>
    ISO8601_Time* _authoredOn;
    /// <summary>
    /// Provides a reference to the author of the request group.
    /// </summary>
    Reference* _author;
    /// <summary>
    /// Describes the reason for the request group in coded or textual form.
    /// </summary>
    size_t _reasonCode_count;
    CodeableConcept** _reasonCode;
    /// <summary>
    /// Indicates another resource whose existence justifies this request group.
    /// </summary>
    size_t _reasonReference_count;
    Reference** _reasonReference;
    /// <summary>
    /// Provides a mechanism to communicate additional information about the response.
    /// </summary>
    size_t _note_count;
    Annotation** _note;
    /// <summary>
    /// The actions, if any, produced by the evaluation of the artifact.
    /// </summary>
    size_t _action_count;
    RequestGroupAction** _action;
  };
};
