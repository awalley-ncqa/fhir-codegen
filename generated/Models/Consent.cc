// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law.
  /// </summary>
  struct ConsentPolicy {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Entity or Organization having regulatory jurisdiction or accountability for  enforcing policies pertaining to Consent Directives.
    /// </summary>
    NullableString8* _authority;
    /// <summary>
    /// This element is for discoverability / documentation and does not modify or qualify the policy rules.
    /// </summary>
    NullableString8* _uri;
  };
  /// <summary>
  /// Whether a treatment instruction (e.g. artificial respiration yes or no) was verified with the patient, his/her family or another authorized person.
  /// </summary>
  struct ConsentVerification {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Has the instruction been verified.
    /// </summary>
    NullableBoolean* _verified;
    /// <summary>
    /// Who verified the instruction (Patient, Relative or other Authorized Person).
    /// </summary>
    Reference* _verifiedWith;
    /// <summary>
    /// Date verification was collected.
    /// </summary>
    ISO8601_Time* _verificationDate;
  };
  /// <summary>
  /// Who or what is controlled by this rule. Use group to identify a set of actors by some property they share (e.g. 'admitting officers').
  /// </summary>
  struct ConsentProvisionActor {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// How the individual is involved in the resources content that is described in the exception.
    /// </summary>
    CodeableConcept* _role;
    /// <summary>
    /// The resource that identifies the actor. To identify actors by type, use group to identify a set of actors by some property they share (e.g. 'admitting officers').
    /// </summary>
    Reference* _reference;
  };
  /// <summary>
  /// The resources controlled by this rule if specific resources are referenced.
  /// </summary>
  struct ConsentProvisionData {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// How the resource reference is interpreted when testing consent restrictions.
    /// </summary>
    NullableString8* _meaning;
    /// <summary>
    /// A reference to a specific resource that defines which resources are covered by this consent.
    /// </summary>
    Reference* _reference;
  };
  /// <summary>
  /// An exception to the base policy of this consent. An exception can be an addition or removal of access permissions.
  /// </summary>
  struct ConsentProvision {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Action  to take - permit or deny - when the rule conditions are met.  Not permitted in root rule, required in all nested rules.
    /// </summary>
    NullableString8* _type;
    /// <summary>
    /// The timeframe in this rule is valid.
    /// </summary>
    Period* _period;
    /// <summary>
    /// Who or what is controlled by this rule. Use group to identify a set of actors by some property they share (e.g. 'admitting officers').
    /// </summary>
    size_t _actor_count;
    ConsentProvisionActor** _actor;
    /// <summary>
    /// Note that this is the direct action (not the grounds for the action covered in the purpose element). At present, the only action in the understood and tested scope of this resource is 'read'.
    /// </summary>
    size_t _action_count;
    CodeableConcept** _action;
    /// <summary>
    /// If the consent specifies a security label of "R" then it applies to all resources that are labeled "R" or lower. E.g. for Confidentiality, it's a high water mark. For other kinds of security labels, subsumption logic applies. When the purpose of use tag is on the data, access request purpose of use shall not conflict.
    /// </summary>
    size_t _securityLabel_count;
    Coding** _securityLabel;
    /// <summary>
    /// When the purpose of use tag is on the data, access request purpose of use shall not conflict.
    /// </summary>
    size_t _purpose_count;
    Coding** _purpose;
    /// <summary>
    /// Multiple types are or'ed together. The intention of the contentType element is that the codes refer to profiles or document types defined in a standard or an implementation guide somewhere.
    /// </summary>
    size_t _class_count;
    Coding** _class;
    /// <summary>
    /// Typical use of this is a Document code with class = CDA.
    /// </summary>
    size_t _code_count;
    CodeableConcept** _code;
    /// <summary>
    /// This has a different sense to the Consent.period - that is when the consent agreement holds. This is the time period of the data that is controlled by the agreement.
    /// </summary>
    Period* _dataPeriod;
    /// <summary>
    /// The resources controlled by this rule if specific resources are referenced.
    /// </summary>
    size_t _data_count;
    ConsentProvisionData** _data;
    /// <summary>
    /// Rules which provide exceptions to the base rule or subrules.
    /// </summary>
    size_t _provisionField_count;
    ConsentProvision** _provisionField;
  };
  /// <summary>
  /// A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.
  /// </summary>
  struct Consent {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// This identifier identifies this copy of the consent. Where this identifier is also used elsewhere as the identifier for a consent record (e.g. a CDA consent document) then the consent details are expected to be the same.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// This element is labeled as a modifier because the status contains the codes rejected and entered-in-error that mark the Consent as not currently valid.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// A selector of the type of consent being presented: ADR, Privacy, Treatment, Research.  This list is now extensible.
    /// </summary>
    CodeableConcept* _scope;
    /// <summary>
    /// A classification of the type of consents found in the statement. This element supports indexing and retrieval of consent statements.
    /// </summary>
    size_t _category_count;
    CodeableConcept** _category;
    /// <summary>
    /// Commonly, the patient the consent pertains to is the author, but for young and old people, it may be some other person.
    /// </summary>
    Reference* _patient;
    /// <summary>
    /// This is not the time of the original consent, but the time that this statement was made or derived.
    /// </summary>
    ISO8601_Time* _dateTime;
    /// <summary>
    /// Commonly, the patient the consent pertains to is the consentor, but particularly for young and old people, it may be some other person - e.g. a legal guardian.
    /// </summary>
    size_t _performer_count;
    Reference** _performer;
    /// <summary>
    /// The organization that manages the consent, and the framework within which it is executed.
    /// </summary>
    size_t _organization_count;
    Reference** _organization;
    /// <summary>
    /// The source can be contained inline (Attachment), referenced directly (Consent), referenced in a consent repository (DocumentReference), or simply by an identifier (Identifier), e.g. a CDA document id.
    /// </summary>
    Attachment* _sourceAttachment;
    /// <summary>
    /// The source can be contained inline (Attachment), referenced directly (Consent), referenced in a consent repository (DocumentReference), or simply by an identifier (Identifier), e.g. a CDA document id.
    /// </summary>
    Reference* _sourceReference;
    /// <summary>
    /// The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law.
    /// </summary>
    size_t _policy_count;
    ConsentPolicy** _policy;
    /// <summary>
    /// If the policyRule is absent, computable consent would need to be constructed from the elements of the Consent resource.
    /// </summary>
    CodeableConcept* _policyRule;
    /// <summary>
    /// Whether a treatment instruction (e.g. artificial respiration yes or no) was verified with the patient, his/her family or another authorized person.
    /// </summary>
    size_t _verification_count;
    ConsentVerification** _verification;
    /// <summary>
    /// An exception to the base policy of this consent. An exception can be an addition or removal of access permissions.
    /// </summary>
    ConsentProvision* _provision;
  };
};
