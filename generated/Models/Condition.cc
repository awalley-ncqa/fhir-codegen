// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// Clinical stage or grade of a condition. May include formal severity assessments.
  /// </summary>
  struct ConditionStage {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// A simple summary of the stage such as "Stage 3". The determination of the stage is disease-specific.
    /// </summary>
    CodeableConcept* _summary;
    /// <summary>
    /// Reference to a formal record of the evidence on which the staging assessment is based.
    /// </summary>
    size_t _assessment_count;
    Reference** _assessment;
    /// <summary>
    /// The kind of staging, such as pathological or clinical staging.
    /// </summary>
    CodeableConcept* _type;
  };
  /// <summary>
  /// The evidence may be a simple list of coded symptoms/manifestations, or references to observations or formal assessments, or both.
  /// </summary>
  struct ConditionEvidence {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// A manifestation or symptom that led to the recording of this condition.
    /// </summary>
    size_t _code_count;
    CodeableConcept** _code;
    /// <summary>
    /// Links to other relevant information, including pathology reports.
    /// </summary>
    size_t _detail_count;
    Reference** _detail;
  };
  /// <summary>
  /// A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.
  /// </summary>
  struct Condition {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// The data type is CodeableConcept because clinicalStatus has some clinical judgment involved, such that there might need to be more specificity than the required FHIR value set allows. For example, a SNOMED coding might allow for additional specificity.
    /// </summary>
    CodeableConcept* _clinicalStatus;
    /// <summary>
    /// verificationStatus is not required.  For example, when a patient has abdominal pain in the ED, there is not likely going to be a verification status.
    /// The data type is CodeableConcept because verificationStatus has some clinical judgment involved, such that there might need to be more specificity than the required FHIR value set allows. For example, a SNOMED coding might allow for additional specificity.
    /// </summary>
    CodeableConcept* _verificationStatus;
    /// <summary>
    /// The categorization is often highly contextual and may appear poorly differentiated or not very useful in other contexts.
    /// </summary>
    size_t _category_count;
    CodeableConcept** _category;
    /// <summary>
    /// Coding of the severity with a terminology is preferred, where possible.
    /// </summary>
    CodeableConcept* _severity;
    /// <summary>
    /// Identification of the condition, problem or diagnosis.
    /// </summary>
    CodeableConcept* _code;
    /// <summary>
    /// Only used if not implicit in code found in Condition.code. If the use case requires attributes from the BodySite resource (e.g. to identify and track separately) then use the standard extension [bodySite](extension-bodysite.html).  May be a summary code, or a reference to a very precise definition of the location, or both.
    /// </summary>
    size_t _bodySite_count;
    CodeableConcept** _bodySite;
    /// <summary>
    /// Indicates the patient or group who the condition record is associated with.
    /// </summary>
    Reference* _subject;
    /// <summary>
    /// This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter. This record indicates the encounter this particular record is associated with.  In the case of a "new" diagnosis reflecting ongoing/revised information about the condition, this might be distinct from the first encounter in which the underlying condition was first "known".
    /// </summary>
    Reference* _encounter;
    /// <summary>
    /// Age is generally used when the patient reports an age at which the Condition began to occur.
    /// </summary>
    ISO8601_Time* _onsetDateTime;
    /// <summary>
    /// Age is generally used when the patient reports an age at which the Condition began to occur.
    /// </summary>
    Age* _onsetAge;
    /// <summary>
    /// Age is generally used when the patient reports an age at which the Condition began to occur.
    /// </summary>
    Period* _onsetPeriod;
    /// <summary>
    /// Age is generally used when the patient reports an age at which the Condition began to occur.
    /// </summary>
    Range* _onsetRange;
    /// <summary>
    /// Age is generally used when the patient reports an age at which the Condition began to occur.
    /// </summary>
    string* _onsetString;
    /// <summary>
    /// There is no explicit distinction between resolution and remission because in many cases the distinction is not clear. Age is generally used when the patient reports an age at which the Condition abated.  If there is no abatement element, it is unknown whether the condition has resolved or entered remission; applications and users should generally assume that the condition is still valid.  When abatementString exists, it implies the condition is abated.
    /// </summary>
    ISO8601_Time* _abatementDateTime;
    /// <summary>
    /// There is no explicit distinction between resolution and remission because in many cases the distinction is not clear. Age is generally used when the patient reports an age at which the Condition abated.  If there is no abatement element, it is unknown whether the condition has resolved or entered remission; applications and users should generally assume that the condition is still valid.  When abatementString exists, it implies the condition is abated.
    /// </summary>
    Age* _abatementAge;
    /// <summary>
    /// There is no explicit distinction between resolution and remission because in many cases the distinction is not clear. Age is generally used when the patient reports an age at which the Condition abated.  If there is no abatement element, it is unknown whether the condition has resolved or entered remission; applications and users should generally assume that the condition is still valid.  When abatementString exists, it implies the condition is abated.
    /// </summary>
    Period* _abatementPeriod;
    /// <summary>
    /// There is no explicit distinction between resolution and remission because in many cases the distinction is not clear. Age is generally used when the patient reports an age at which the Condition abated.  If there is no abatement element, it is unknown whether the condition has resolved or entered remission; applications and users should generally assume that the condition is still valid.  When abatementString exists, it implies the condition is abated.
    /// </summary>
    Range* _abatementRange;
    /// <summary>
    /// There is no explicit distinction between resolution and remission because in many cases the distinction is not clear. Age is generally used when the patient reports an age at which the Condition abated.  If there is no abatement element, it is unknown whether the condition has resolved or entered remission; applications and users should generally assume that the condition is still valid.  When abatementString exists, it implies the condition is abated.
    /// </summary>
    string* _abatementString;
    /// <summary>
    /// The recordedDate represents when this particular Condition record was created in the system, which is often a system-generated date.
    /// </summary>
    ISO8601_Time* _recordedDate;
    /// <summary>
    /// Individual who recorded the record and takes responsibility for its content.
    /// </summary>
    Reference* _recorder;
    /// <summary>
    /// Individual who is making the condition statement.
    /// </summary>
    Reference* _asserter;
    /// <summary>
    /// Clinical stage or grade of a condition. May include formal severity assessments.
    /// </summary>
    size_t _stage_count;
    ConditionStage** _stage;
    /// <summary>
    /// The evidence may be a simple list of coded symptoms/manifestations, or references to observations or formal assessments, or both.
    /// </summary>
    size_t _evidence_count;
    ConditionEvidence** _evidence;
    /// <summary>
    /// Additional information about the Condition. This is a general notes/comments entry  for description of the Condition, its diagnosis and prognosis.
    /// </summary>
    size_t _note_count;
    Annotation** _note;
  };
};
