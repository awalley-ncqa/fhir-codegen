// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// Distribution of the payment amount for a previously acknowledged payable.
  /// </summary>
  struct PaymentReconciliationDetail {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Unique identifier for the current payment item for the referenced payable.
    /// </summary>
    Identifier* _identifier;
    /// <summary>
    /// Unique identifier for the prior payment item for the referenced payable.
    /// </summary>
    Identifier* _predecessor;
    /// <summary>
    /// For example: payment, adjustment, funds advance, etc.
    /// </summary>
    CodeableConcept* _type;
    /// <summary>
    /// A resource, such as a Claim, the evaluation of which could lead to payment.
    /// </summary>
    Reference* _request;
    /// <summary>
    /// The party which submitted the claim or financial transaction.
    /// </summary>
    Reference* _submitter;
    /// <summary>
    /// A resource, such as a ClaimResponse, which contains a commitment to payment.
    /// </summary>
    Reference* _response;
    /// <summary>
    /// The date from the response resource containing a commitment to pay.
    /// </summary>
    ISO8601_Time* _date;
    /// <summary>
    /// A reference to the individual who is responsible for inquiries regarding the response and its payment.
    /// </summary>
    Reference* _responsible;
    /// <summary>
    /// The party which is receiving the payment.
    /// </summary>
    Reference* _payee;
    /// <summary>
    /// The monetary amount allocated from the total payment to the payable.
    /// </summary>
    Money* _amount;
  };
  /// <summary>
  /// A note that describes or explains the processing in a human readable form.
  /// </summary>
  struct PaymentReconciliationProcessNote {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The business purpose of the note text.
    /// </summary>
    NullableString8* _type;
    /// <summary>
    /// The explanation or description associated with the processing.
    /// </summary>
    string* _text;
  };
  /// <summary>
  /// This resource provides the details including amount of a payment and allocates the payment items being paid.
  /// </summary>
  struct PaymentReconciliation {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// A unique identifier assigned to this payment reconciliation.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// The period of time for which payments have been gathered into this bulk payment for settlement.
    /// </summary>
    Period* _period;
    /// <summary>
    /// The date when the resource was created.
    /// </summary>
    ISO8601_Time* _created;
    /// <summary>
    /// This party is also responsible for the reconciliation.
    /// </summary>
    Reference* _paymentIssuer;
    /// <summary>
    /// Original request resource reference.
    /// </summary>
    Reference* _request;
    /// <summary>
    /// The practitioner who is responsible for the services rendered to the patient.
    /// </summary>
    Reference* _requestor;
    /// <summary>
    /// The resource may be used to indicate that: the request has been held (queued) for processing; that it has been processed and errors found (error); that no errors were found and that some of the adjudication has been undertaken (partial) or that all of the adjudication has been undertaken (complete).
    /// </summary>
    NullableString8* _outcome;
    /// <summary>
    /// A human readable description of the status of the request for the reconciliation.
    /// </summary>
    string* _disposition;
    /// <summary>
    /// The date of payment as indicated on the financial instrument.
    /// </summary>
    ISO8601_Time* _paymentDate;
    /// <summary>
    /// Total payment amount as indicated on the financial instrument.
    /// </summary>
    Money* _paymentAmount;
    /// <summary>
    /// For example: EFT number or check number.
    /// </summary>
    Identifier* _paymentIdentifier;
    /// <summary>
    /// Distribution of the payment amount for a previously acknowledged payable.
    /// </summary>
    size_t _detail_count;
    PaymentReconciliationDetail** _detail;
    /// <summary>
    /// May be needed to identify specific jurisdictional forms.
    /// </summary>
    CodeableConcept* _formCode;
    /// <summary>
    /// A note that describes or explains the processing in a human readable form.
    /// </summary>
    size_t _processNote_count;
    PaymentReconciliationProcessNote** _processNote;
  };
};
