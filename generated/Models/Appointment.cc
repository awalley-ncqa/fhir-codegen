// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// List of participants involved in the appointment.
  /// </summary>
  struct AppointmentParticipant {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// The role of the participant can be used to declare what the actor will be doing in the scope of this appointment.
    /// If the actor is not specified, then it is expected that the actor will be filled in at a later stage of planning.
    /// This value SHALL be the same when creating an AppointmentResponse so that they can be matched, and subsequently update the Appointment.
    /// </summary>
    size_t _type_count;
    CodeableConcept** _type;
    /// <summary>
    /// A Person, Location/HealthcareService or Device that is participating in the appointment.
    /// </summary>
    Reference* _actor;
    /// <summary>
    /// Whether this participant is required to be present at the meeting. This covers a use-case where two doctors need to meet to discuss the results for a specific patient, and the patient is not required to be present.
    /// </summary>
    NullableString8* _required;
    /// <summary>
    /// Participation status of the actor.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// Participation period of the actor.
    /// </summary>
    Period* _period;
  };
  /// <summary>
  /// A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).
  /// </summary>
  struct Appointment {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// This records identifiers associated with this appointment concern that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// If the Appointment's status is "cancelled" then all participants are expected to have their calendars released for the appointment period, and as such any Slots that were marked as BUSY can be re-set to FREE.
    /// This element is labeled as a modifier because the status contains the code entered-in-error that mark the Appointment as not currently valid.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// The coded reason for the appointment being cancelled. This is often used in reporting/billing/futher processing to determine if further actions are required, or specific fees apply.
    /// </summary>
    CodeableConcept* _cancelationReason;
    /// <summary>
    /// A broad categorization of the service that is to be performed during this appointment.
    /// </summary>
    size_t _serviceCategory_count;
    CodeableConcept** _serviceCategory;
    /// <summary>
    /// For a provider to provider appointment the code "FOLLOWUP" may be appropriate, as this is expected to be discussing some patient that was seen in the past.
    /// </summary>
    size_t _serviceType_count;
    CodeableConcept** _serviceType;
    /// <summary>
    /// The specialty of a practitioner that would be required to perform the service requested in this appointment.
    /// </summary>
    size_t _specialty_count;
    CodeableConcept** _specialty;
    /// <summary>
    /// The style of appointment or patient that has been booked in the slot (not service type).
    /// </summary>
    CodeableConcept* _appointmentType;
    /// <summary>
    /// The coded reason that this appointment is being scheduled. This is more clinical than administrative.
    /// </summary>
    size_t _reasonCode_count;
    CodeableConcept** _reasonCode;
    /// <summary>
    /// Reason the appointment has been scheduled to take place, as specified using information from another resource. When the patient arrives and the encounter begins it may be used as the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.
    /// </summary>
    size_t _reasonReference_count;
    Reference** _reasonReference;
    /// <summary>
    /// Seeking implementer feedback on this property and how interoperable it is.
    /// Using an extension to record a CodeableConcept for named values may be tested at a future connectathon.
    /// </summary>
    NullableInt32* _priority;
    /// <summary>
    /// The brief description of the appointment as would be shown on a subject line in a meeting request, or appointment list. Detailed or expanded information should be put in the comment field.
    /// </summary>
    string* _description;
    /// <summary>
    /// Additional information to support the appointment provided when making the appointment.
    /// </summary>
    size_t _supportingInformation_count;
    Reference** _supportingInformation;
    /// <summary>
    /// Date/Time that the appointment is to take place.
    /// </summary>
    ISO8601_Time* _start;
    /// <summary>
    /// Date/Time that the appointment is to conclude.
    /// </summary>
    ISO8601_Time* _end;
    /// <summary>
    /// Number of minutes that the appointment is to take. This can be less than the duration between the start and end times.  For example, where the actual time of appointment is only an estimate or if a 30 minute appointment is being requested, but any time would work.  Also, if there is, for example, a planned 15 minute break in the middle of a long appointment, the duration may be 15 minutes less than the difference between the start and end.
    /// </summary>
    NullableInt32* _minutesDuration;
    /// <summary>
    /// The slots from the participants' schedules that will be filled by the appointment.
    /// </summary>
    size_t _slot_count;
    Reference** _slot;
    /// <summary>
    /// This property is required for many use cases where the age of an appointment is considered in processing workflows for scheduling and billing of appointments.
    /// </summary>
    ISO8601_Time* _created;
    /// <summary>
    /// Additional text to aid in facilitating the appointment. For instance, a comment might be, "patient should proceed immediately to infusion room upon arrival"
    /// Where this is a planned appointment and the start/end dates are not set then this field can be used to provide additional guidance on the details of the appointment request, including any restrictions on when to book it.
    /// </summary>
    string* _comment;
    /// <summary>
    /// While Appointment.comment contains information for internal use, Appointment.patientInstructions is used to capture patient facing information about the Appointment (e.g. please bring your referral or fast from 8pm night before).
    /// </summary>
    string* _patientInstruction;
    /// <summary>
    /// The service request this appointment is allocated to assess (e.g. incoming referral or procedure request).
    /// </summary>
    size_t _basedOn_count;
    Reference** _basedOn;
    /// <summary>
    /// List of participants involved in the appointment.
    /// </summary>
    size_t _participant_count;
    AppointmentParticipant** _participant;
    /// <summary>
    /// This does not introduce a capacity for recurring appointments.
    /// </summary>
    size_t _requestedPeriod_count;
    Period** _requestedPeriod;
  };
};
