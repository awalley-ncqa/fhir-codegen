// <auto-generated />
// Built from: hl7.fhir.r4.core version: 4.0.1


namespace fhir_R4
{
  /// <summary>
  /// Details concerning the specimen collection.
  /// </summary>
  struct SpecimenCollection {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Person who collected the specimen.
    /// </summary>
    Reference* _collector;
    /// <summary>
    /// Time when specimen was collected from subject - the physiologically relevant time.
    /// </summary>
    ISO8601_Time* _collectedDateTime;
    /// <summary>
    /// Time when specimen was collected from subject - the physiologically relevant time.
    /// </summary>
    Period* _collectedPeriod;
    /// <summary>
    /// The span of time over which the collection of a specimen occurred.
    /// </summary>
    Duration* _duration;
    /// <summary>
    /// The quantity of specimen collected; for instance the volume of a blood sample, or the physical measurement of an anatomic pathology sample.
    /// </summary>
    Quantity* _quantity;
    /// <summary>
    /// A coded value specifying the technique that is used to perform the procedure.
    /// </summary>
    CodeableConcept* _method;
    /// <summary>
    /// If the use case requires  BodySite to be handled as a separate resource instead of an inline coded element (e.g. to identify and track separately)  then use the standard extension [bodySite](extension-bodysite.html).
    /// </summary>
    CodeableConcept* _bodySite;
    /// <summary>
    /// Representing fasting status using this element is preferred to representing it with an observation using a 'pre-coordinated code'  such as  LOINC 2005-7 (Calcium [Moles/​time] in 2 hour Urine --12 hours fasting), or  using  a component observation ` such as `Observation.component code`  = LOINC 49541-6 (Fasting status - Reported).
    /// </summary>
    CodeableConcept* _fastingStatusCodeableConcept;
    /// <summary>
    /// Representing fasting status using this element is preferred to representing it with an observation using a 'pre-coordinated code'  such as  LOINC 2005-7 (Calcium [Moles/​time] in 2 hour Urine --12 hours fasting), or  using  a component observation ` such as `Observation.component code`  = LOINC 49541-6 (Fasting status - Reported).
    /// </summary>
    Duration* _fastingStatusDuration;
  };
  /// <summary>
  /// Details concerning processing and processing steps for the specimen.
  /// </summary>
  struct SpecimenProcessing {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Textual description of procedure.
    /// </summary>
    string* _description;
    /// <summary>
    /// A coded value specifying the procedure used to process the specimen.
    /// </summary>
    CodeableConcept* _procedure;
    /// <summary>
    /// Material used in the processing step.
    /// </summary>
    size_t _additive_count;
    Reference** _additive;
    /// <summary>
    /// A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin.
    /// </summary>
    ISO8601_Time* _timeDateTime;
    /// <summary>
    /// A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin.
    /// </summary>
    Period* _timePeriod;
  };
  /// <summary>
  /// The container holding the specimen.  The recursive nature of containers; i.e. blood in tube in tray in rack is not addressed here.
  /// </summary>
  struct SpecimenContainer {
    /// <summary>
    /// Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.
    /// </summary>
    string _id;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Id for container. There may be multiple; a manufacturer's bar code, lab assigned identifier, etc. The container ID may differ from the specimen id in some circumstances.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// Textual description of the container.
    /// </summary>
    string* _description;
    /// <summary>
    /// The type of container associated with the specimen (e.g. slide, aliquot, etc.).
    /// </summary>
    CodeableConcept* _type;
    /// <summary>
    /// The capacity (volume or other measure) the container may contain.
    /// </summary>
    Quantity* _capacity;
    /// <summary>
    /// The quantity of specimen in the container; may be volume, dimensions, or other appropriate measurements, depending on the specimen type.
    /// </summary>
    Quantity* _specimenQuantity;
    /// <summary>
    /// Introduced substance to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.
    /// </summary>
    CodeableConcept* _additiveCodeableConcept;
    /// <summary>
    /// Introduced substance to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.
    /// </summary>
    Reference* _additiveReference;
  };
  /// <summary>
  /// A sample to be used for analysis.
  /// </summary>
  struct Specimen {
    ResourceType resourceType;
    /// <summary>
    /// The only time that a resource does not have an id is when it is being submitted to the server using a create operation.
    /// </summary>
    string _id;
    /// <summary>
    /// The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
    /// </summary>
    Meta* _meta;
    /// <summary>
    /// Asserting this rule set restricts the content to be only understood by a limited set of trading partners. This inherently limits the usefulness of the data in the long term. However, the existing health eco-system is highly fractured, and not yet ready to define, collect, and exchange data in a generally computable sense. Wherever possible, implementers and/or specification writers should avoid using this element. Often, when used, the URL is a reference to an implementation guide that defines these special rules as part of it's narrative along with other profiles, value sets, etc.
    /// </summary>
    NullableString8* _implicitRules;
    /// <summary>
    /// Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).
    /// </summary>
    NullableString8* _language;
    /// <summary>
    /// Contained resources do not have narrative. Resources that are not contained SHOULD have a narrative. In some cases, a resource may only have text with little or no additional discrete data (as long as all minOccurs=1 elements are satisfied).  This may be necessary for data from legacy systems where information is captured as a "text blob" or where text is additionally entered raw or narrated and encoded information is added later.
    /// </summary>
    Narrative* _text;
    /// <summary>
    /// This should never be done when the content can be identified properly, as once identification is lost, it is extremely difficult (and context dependent) to restore it again. Contained resources may have profiles and tags In their meta elements, but SHALL NOT have security labels.
    /// </summary>
    size_t _contained_count;
    Resource** _contained;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _extension_count;
    Extension** _extension;
    /// <summary>
    /// There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.
    /// </summary>
    size_t _modifierExtension_count;
    Extension** _modifierExtension;
    /// <summary>
    /// Id for specimen.
    /// </summary>
    size_t _identifier_count;
    Identifier** _identifier;
    /// <summary>
    /// The identifier assigned by the lab when accessioning specimen(s). This is not necessarily the same as the specimen identifier, depending on local lab procedures.
    /// </summary>
    Identifier* _accessionIdentifier;
    /// <summary>
    /// This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.
    /// </summary>
    NullableString8* _status;
    /// <summary>
    /// The type can change the way that a specimen is handled and drives what kind of analyses can properly be performed on the specimen. It is frequently used in diagnostic work flow decision making systems.
    /// </summary>
    CodeableConcept* _type;
    /// <summary>
    /// Where the specimen came from. This may be from patient(s), from a location (e.g., the source of an environmental sample), or a sampling of a substance or a device.
    /// </summary>
    Reference* _subject;
    /// <summary>
    /// Time when specimen was received for processing or testing.
    /// </summary>
    ISO8601_Time* _receivedTime;
    /// <summary>
    /// The parent specimen could be the source from which the current specimen is derived by some processing step (e.g. an aliquot or isolate or extracted nucleic acids from clinical samples) or one of many specimens that were combined to create a pooled sample.
    /// </summary>
    size_t _parent_count;
    Reference** _parent;
    /// <summary>
    /// The request may be explicit or implied such with a ServiceRequest that requires a blood draw.
    /// </summary>
    size_t _request_count;
    Reference** _request;
    /// <summary>
    /// Details concerning the specimen collection.
    /// </summary>
    SpecimenCollection* _collection;
    /// <summary>
    /// Details concerning processing and processing steps for the specimen.
    /// </summary>
    size_t _processing_count;
    SpecimenProcessing** _processing;
    /// <summary>
    /// The container holding the specimen.  The recursive nature of containers; i.e. blood in tube in tray in rack is not addressed here.
    /// </summary>
    size_t _container_count;
    SpecimenContainer** _container;
    /// <summary>
    /// Specimen condition is an observation made about the specimen.  It's a point-in-time assessment.  It can be used to assess its quality or appropriateness for a specific test.
    /// </summary>
    size_t _condition_count;
    CodeableConcept** _condition;
    /// <summary>
    /// To communicate any details or issues about the specimen or during the specimen collection. (for example: broken vial, sent with patient, frozen).
    /// </summary>
    size_t _note_count;
    Annotation** _note;
  };
};
